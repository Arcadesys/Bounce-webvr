"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "components_BounceScene_js";
exports.ids = ["components_BounceScene_js"];
exports.modules = {

/***/ "./components/BounceScene.js":
/*!***********************************!*\
  !*** ./components/BounceScene.js ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BounceScene)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var cannon_es__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! cannon-es */ \"cannon-es\");\n/* harmony import */ var cannon_es__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(cannon_es__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _utils_midiSequencer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/midiSequencer */ \"./utils/midiSequencer.js\");\n/* harmony import */ var _NoteDisplay__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./NoteDisplay */ \"./components/NoteDisplay.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([three__WEBPACK_IMPORTED_MODULE_2__]);\nthree__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n// Import the MIDI sequencer utilities\n\n\nfunction BounceScene() {\n    const mountRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Reference to contact material for accessing in slider handler\n    const contactMaterialRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Store platform material for access from slider handler\n    const platformMaterialRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // State for note display\n    const [isDrawing, setIsDrawing] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [wallLength, setWallLength] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (true) return;\n        // Scene variables\n        let scene, camera, renderer;\n        let world;\n        let balls = [];\n        let walls = [];\n        let wallBodies = [];\n        let isDrawingInternal = false;\n        let wallStart = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3();\n        let wallEnd = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3();\n        let currentWallMesh = null;\n        let audioContext;\n        let soundEnabled = true;\n        // Define physics materials inside the useEffect\n        const ballMaterial = new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Material(\"ballMaterial\");\n        ballMaterial.friction = 0.3;\n        ballMaterial.restitution = 0.7; // Default ball restitution\n        const platformMaterial = new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Material(\"platformMaterial\");\n        platformMaterial.friction = 0.1; // Low friction for platforms\n        platformMaterial.restitution = 0.5; // Default platform restitution (will be controlled by slider)\n        // Store in ref for access outside useEffect\n        platformMaterialRef.current = platformMaterial;\n        // Keep track of the shared platform material contact properties\n        let ballPlatformContactMaterial;\n        // Audio context for sound effects\n        function initAudio() {\n            audioContext = new (window.AudioContext || window.webkitAudioContext)();\n            // Create success sound function\n            window.playBounceSound = (intensity = 1.0)=>{\n                if (!soundEnabled || !audioContext) return;\n                const oscillator = audioContext.createOscillator();\n                const gainNode = audioContext.createGain();\n                oscillator.type = \"sine\";\n                oscillator.frequency.setValueAtTime(300 + intensity * 200, audioContext.currentTime);\n                oscillator.frequency.exponentialRampToValueAtTime(200, audioContext.currentTime + 0.1);\n                gainNode.gain.setValueAtTime(intensity * 0.3, audioContext.currentTime);\n                gainNode.gain.exponentialRampToValueAtTime(0.001, audioContext.currentTime + 0.2);\n                oscillator.connect(gainNode);\n                gainNode.connect(audioContext.destination);\n                oscillator.start();\n                oscillator.stop(audioContext.currentTime + 0.2);\n            };\n        }\n        // Initialize Three.js scene\n        function initScene() {\n            // Scene setup\n            scene = new three__WEBPACK_IMPORTED_MODULE_2__.Scene();\n            scene.background = new three__WEBPACK_IMPORTED_MODULE_2__.Color(0x000000); // Black background\n            // Camera setup\n            camera = new three__WEBPACK_IMPORTED_MODULE_2__.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n            camera.position.z = 5;\n            // Renderer setup\n            renderer = new three__WEBPACK_IMPORTED_MODULE_2__.WebGLRenderer({\n                antialias: true\n            });\n            renderer.setSize(window.innerWidth, window.innerHeight);\n            renderer.shadowMap.enabled = true;\n            mountRef.current.appendChild(renderer.domElement);\n            // Lighting\n            const ambientLight = new three__WEBPACK_IMPORTED_MODULE_2__.AmbientLight(0xffffff, 0.5);\n            scene.add(ambientLight);\n            const directionalLight = new three__WEBPACK_IMPORTED_MODULE_2__.DirectionalLight(0xffffff, 0.8);\n            directionalLight.position.set(10, 20, 15);\n            directionalLight.castShadow = true;\n            directionalLight.shadow.mapSize.width = 2048;\n            directionalLight.shadow.mapSize.height = 2048;\n            scene.add(directionalLight);\n        }\n        // Initialize physics world\n        function initPhysics() {\n            world = new cannon_es__WEBPACK_IMPORTED_MODULE_3__.World({\n                gravity: new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Vec3(0, -9.82, 0) // Earth gravity\n            });\n            // Improve solver to handle physics more accurately\n            world.solver.iterations = 10; // Default is 10, increase for more accuracy\n            world.solver.tolerance = 0.001; // Default is 0.001, lower for better accuracy\n            // Define default collision behavior\n            world.defaultContactMaterial.contactEquationStiffness = 1e7; // Stiffer contacts for trampoline effect\n            world.defaultContactMaterial.contactEquationRelaxation = 4; // More relaxation for stability\n            // Create special materials for trampoline-like behavior\n            ballMaterial.friction = 0.2; // Low friction for bowling ball\n            ballMaterial.restitution = 0.5; // Medium restitution for ball itself\n            platformMaterial.friction = 0.4; // Medium friction for platforms\n            platformMaterial.restitution = 0.8; // High restitution for trampoline effect\n            // Create contact material for ball-wall interactions\n            ballPlatformContactMaterial = new cannon_es__WEBPACK_IMPORTED_MODULE_3__.ContactMaterial(ballMaterial, platformMaterial, {\n                friction: 0.2,\n                restitution: 0.95,\n                contactEquationRelaxation: 3,\n                frictionEquationStiffness: 1e7,\n                contactEquationStiffness: 1e8 // Very stiff contacts for immediate response\n            });\n            // Store in ref for access outside useEffect\n            contactMaterialRef.current = ballPlatformContactMaterial;\n            world.addContactMaterial(ballPlatformContactMaterial);\n            // Special event listener for custom collision behavior\n            world.addEventListener(\"postStep\", ()=>{\n                // Custom handling of ball-wall collisions to simulate perfect trampolines\n                // This prevents energy gain which can happen in physics engines\n                for(let i = 0; i < balls.length; i++){\n                    const ball = balls[i];\n                    if (ball && ball.body) {\n                        // Apply a constant small damping to simulate minimal air resistance\n                        ball.body.velocity.scale(0.998, ball.body.velocity);\n                    }\n                }\n            });\n            // Ground plane - invisible physics plane\n            const groundBody = new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Body({\n                type: cannon_es__WEBPACK_IMPORTED_MODULE_3__.Body.STATIC,\n                shape: new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Plane(),\n                material: platformMaterial // Assign platform material\n            });\n            groundBody.quaternion.setFromAxisAngle(new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Vec3(1, 0, 0), -Math.PI / 2);\n            groundBody.position.y = -2;\n            groundBody.userData = {\n                isGround: true\n            }; // Add userData for identification\n            world.addBody(groundBody);\n            // Visible ground plane\n            const groundGeometry = new three__WEBPACK_IMPORTED_MODULE_2__.PlaneGeometry(10, 10);\n            const groundMaterial = new three__WEBPACK_IMPORTED_MODULE_2__.MeshStandardMaterial({\n                color: 0x228B22,\n                roughness: 0.7,\n                metalness: 0.1\n            });\n            const ground = new three__WEBPACK_IMPORTED_MODULE_2__.Mesh(groundGeometry, groundMaterial);\n            ground.rotation.x = -Math.PI / 2;\n            ground.position.y = -2;\n            ground.receiveShadow = true;\n            ground.userData = {\n                isGround: true\n            }; // Add userData for identification\n            scene.add(ground);\n        }\n        // Create a ball at the specified position\n        function createBall(position) {\n            const radius = 0.2;\n            // Physical body with bowling ball properties\n            const ballBody = new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Body({\n                mass: 5,\n                shape: new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Sphere(radius),\n                position: new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Vec3(position.x, position.y, position.z),\n                linearDamping: 0.05,\n                angularDamping: 0.2,\n                material: ballMaterial // Assign ball material\n            });\n            // Initial downward velocity to simulate dropping\n            ballBody.velocity.set(0, -0.5, 0 // No initial z velocity\n            );\n            world.addBody(ballBody);\n            // Listen for collision events to play sounds and handle physics\n            ballBody.addEventListener(\"collide\", (event)=>{\n                const relativeVelocity = event.contact.getImpactVelocityAlongNormal();\n                // Get the other colliding body\n                const otherBody = event.body === ballBody ? event.target : event.body;\n                // Handle collision based on what was hit\n                if (otherBody.userData && otherBody.userData.isWall) {\n                    // For wall (trampoline) collisions, use custom restitution\n                    // This ensures momentum is conserved (with small loss) without adding energy\n                    // Use the wall's restitution value\n                    const wallRestitution = otherBody.userData.restitution || 0.95;\n                    // Get the contact normal\n                    const contactNormal = event.contact.ni;\n                    // Apply a properly scaled impulse along the normal\n                    // This simulates an elastic collision with the trampoline\n                    const impulseMagnitude = Math.abs(relativeVelocity) * ballBody.mass * wallRestitution;\n                    const impulse = new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Vec3(contactNormal.x * impulseMagnitude, contactNormal.y * impulseMagnitude, contactNormal.z * impulseMagnitude);\n                    // Apply small energy loss on the walls (trampolines absorb a tiny bit of energy)\n                    impulse.scale(0.98, impulse);\n                    // Play the note associated with the wall\n                    if (audioContext && soundEnabled && Math.abs(relativeVelocity) > 0.5) {\n                        // Velocity affects volume\n                        const intensity = Math.min(Math.abs(relativeVelocity) / 10, 1);\n                        (0,_utils_midiSequencer__WEBPACK_IMPORTED_MODULE_4__.playNoteForLength)(audioContext, otherBody.userData.length, 0.5, intensity * 0.5);\n                    }\n                } else if (otherBody.userData && otherBody.userData.isGround) {\n                    ballBody.userData = ballBody.userData || {};\n                    ballBody.userData.shouldRemove = true;\n                    // Play bounce sound\n                    if (audioContext && soundEnabled && Math.abs(relativeVelocity) > 0.5) {\n                        const intensity = Math.min(Math.abs(relativeVelocity) / 10, 1);\n                        window.playBounceSound(intensity);\n                    }\n                } else if (Math.abs(relativeVelocity) > 0.5) {\n                    // Apply a default energy loss\n                    const energyLoss = 0.96; // Lose 4% energy per collision\n                    ballBody.velocity.scale(energyLoss, ballBody.velocity);\n                    // Play a bounce sound for any other collision\n                    if (audioContext && soundEnabled) {\n                        const intensity = Math.min(Math.abs(relativeVelocity) / 10, 1);\n                        window.playBounceSound(intensity);\n                    }\n                }\n            });\n            // Visual ball - heavier appearance\n            const ballGeometry = new three__WEBPACK_IMPORTED_MODULE_2__.SphereGeometry(radius, 32, 32);\n            const visualBallMaterial = new three__WEBPACK_IMPORTED_MODULE_2__.MeshStandardMaterial({\n                color: Math.random() * 0xffffff,\n                roughness: 0.3,\n                metalness: 0.5 // More metallic appearance for a bowling ball look\n            });\n            const ballMesh = new three__WEBPACK_IMPORTED_MODULE_2__.Mesh(ballGeometry, visualBallMaterial);\n            ballMesh.castShadow = true;\n            ballMesh.receiveShadow = true;\n            scene.add(ballMesh);\n            return {\n                body: ballBody,\n                mesh: ballMesh\n            };\n        }\n        // Create a wall between two points\n        function createWall(start, end) {\n            // Calculate wall properties\n            const direction = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3().subVectors(end, start);\n            const length = direction.length();\n            const center = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3().addVectors(start, end).multiplyScalar(0.5);\n            // Update state for NoteDisplay component\n            setWallLength(length);\n            // Calculate rotation with correct direction\n            const wallDirection = direction.clone().normalize();\n            // This gives proper orientation along the line between points\n            const angle = Math.atan2(direction.y, direction.x);\n            console.log(\"Creating wall: start=\", start, \"end=\", end);\n            console.log(\"Wall angle (degrees):\", angle * (180 / Math.PI));\n            // Get note information based on wall length\n            const note = (0,_utils_midiSequencer__WEBPACK_IMPORTED_MODULE_4__.mapLengthToNote)(length);\n            const noteColor = (0,_utils_midiSequencer__WEBPACK_IMPORTED_MODULE_4__.getNoteColor)(note);\n            // Create physical wall - trampoline properties\n            const wallShape = new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Box(new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Vec3(length / 2, 0.1, 0.1));\n            const wallBody = new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Body({\n                mass: 0,\n                position: new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Vec3(center.x, center.y, center.z),\n                shape: wallShape,\n                material: platformMaterial,\n                // Add custom properties for trampoline-like behavior\n                fixedRotation: true // Prevent rotation for stability\n            });\n            // Store note information with the wall body for collision handling\n            wallBody.userData = {\n                note: note,\n                length: length,\n                isWall: true,\n                restitution: 0.95 // High restitution for trampoline effect without adding energy\n            };\n            // Rotate physics body to match visual representation\n            wallBody.quaternion.setFromAxisAngle(new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Vec3(0, 0, 1), angle);\n            world.addBody(wallBody);\n            wallBodies.push(wallBody);\n            // Create visual wall\n            const wallGeometry = new three__WEBPACK_IMPORTED_MODULE_2__.BoxGeometry(length, 0.2, 0.2);\n            const wallMaterial = new three__WEBPACK_IMPORTED_MODULE_2__.MeshStandardMaterial({\n                color: noteColor,\n                roughness: 0.8,\n                metalness: 0.2\n            });\n            const wallMesh = new three__WEBPACK_IMPORTED_MODULE_2__.Mesh(wallGeometry, wallMaterial);\n            wallMesh.position.copy(center);\n            // Apply the same rotation to the visual mesh\n            wallMesh.rotation.z = angle;\n            wallMesh.castShadow = true;\n            wallMesh.receiveShadow = true;\n            scene.add(wallMesh);\n            walls.push(wallMesh);\n            // Play the note when the wall is created\n            if (audioContext && soundEnabled) {\n                (0,_utils_midiSequencer__WEBPACK_IMPORTED_MODULE_4__.playNoteForLength)(audioContext, length, 0.5, 0.3);\n            }\n            return {\n                body: wallBody,\n                mesh: wallMesh,\n                note: note\n            };\n        }\n        // Update temporary wall while drawing\n        function updateTempWall() {\n            if (currentWallMesh) {\n                scene.remove(currentWallMesh);\n            }\n            const direction = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3().subVectors(wallEnd, wallStart);\n            const length = direction.length();\n            const center = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3().addVectors(wallStart, wallEnd).multiplyScalar(0.5);\n            // Update state for NoteDisplay component\n            setWallLength(length);\n            // Calculate angle with same formula as in createWall\n            const angle = Math.atan2(direction.y, direction.x);\n            // Get note based on current length\n            const note = (0,_utils_midiSequencer__WEBPACK_IMPORTED_MODULE_4__.mapLengthToNote)(length);\n            const noteColor = (0,_utils_midiSequencer__WEBPACK_IMPORTED_MODULE_4__.getNoteColor)(note);\n            const wallGeometry = new three__WEBPACK_IMPORTED_MODULE_2__.BoxGeometry(length, 0.2, 0.2);\n            const wallMaterial = new three__WEBPACK_IMPORTED_MODULE_2__.MeshStandardMaterial({\n                color: noteColor,\n                transparent: true,\n                opacity: 0.7,\n                roughness: 0.8\n            });\n            currentWallMesh = new three__WEBPACK_IMPORTED_MODULE_2__.Mesh(wallGeometry, wallMaterial);\n            currentWallMesh.position.copy(center);\n            // Apply same rotation as in createWall\n            currentWallMesh.rotation.z = angle;\n            scene.add(currentWallMesh);\n        }\n        // Raycaster for mouse interaction\n        const raycaster = new three__WEBPACK_IMPORTED_MODULE_2__.Raycaster();\n        const mouse = new three__WEBPACK_IMPORTED_MODULE_2__.Vector2();\n        const drawingPlane = new three__WEBPACK_IMPORTED_MODULE_2__.Plane(new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(0, 0, 1), 0);\n        // Mouse event handlers\n        function onMouseDown(event) {\n            // Get mouse position\n            mouse.x = event.clientX / window.innerWidth * 2 - 1;\n            mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n            // Initialize audio on first interaction\n            if (!audioContext) {\n                initAudio();\n            }\n            // Cast ray from mouse position into scene\n            raycaster.setFromCamera(mouse, camera);\n            // If shift is held, start drawing a wall\n            if (event.shiftKey) {\n                isDrawingInternal = true;\n                setIsDrawing(true); // Update state for NoteDisplay\n                const intersection = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3();\n                raycaster.ray.intersectPlane(drawingPlane, intersection);\n                wallStart = intersection.clone();\n                wallEnd = intersection.clone();\n                updateTempWall();\n            } else {\n                // Otherwise, drop a ball\n                const intersection = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3();\n                raycaster.ray.intersectPlane(drawingPlane, intersection);\n                const ball = createBall(intersection);\n                balls.push(ball);\n            }\n        }\n        function onMouseMove(event) {\n            mouse.x = event.clientX / window.innerWidth * 2 - 1;\n            mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n            if (isDrawingInternal) {\n                raycaster.setFromCamera(mouse, camera);\n                const intersection = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3();\n                raycaster.ray.intersectPlane(drawingPlane, intersection);\n                wallEnd = intersection;\n                updateTempWall();\n            }\n        }\n        function onMouseUp(event) {\n            if (isDrawingInternal) {\n                isDrawingInternal = false;\n                setIsDrawing(false); // Update state for NoteDisplay\n                // Only create a wall if it has some length\n                if (wallStart.distanceTo(wallEnd) > 0.2) {\n                    createWall(wallStart, wallEnd);\n                    // Remove temporary wall\n                    if (currentWallMesh) {\n                        scene.remove(currentWallMesh);\n                        currentWallMesh = null;\n                    }\n                }\n            }\n        }\n        // Handle window resize\n        function onWindowResize() {\n            camera.aspect = window.innerWidth / window.innerHeight;\n            camera.updateProjectionMatrix();\n            renderer.setSize(window.innerWidth, window.innerHeight);\n        }\n        // Allow dropping a ball with a touch on mobile\n        function onTouchStart(event) {\n            // Initialize audio on first interaction\n            if (!audioContext) {\n                initAudio();\n            }\n            event.preventDefault();\n            const touch = event.touches[0];\n            mouse.x = touch.clientX / window.innerWidth * 2 - 1;\n            mouse.y = -(touch.clientY / window.innerHeight) * 2 + 1;\n            raycaster.setFromCamera(mouse, camera);\n            const intersection = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3();\n            raycaster.ray.intersectPlane(drawingPlane, intersection);\n            const ball = createBall(intersection);\n            balls.push(ball);\n        }\n        // Toggle sound\n        function toggleSound() {\n            soundEnabled = !soundEnabled;\n            const soundToggle = document.getElementById(\"sound-toggle\");\n            if (soundToggle) {\n                soundToggle.textContent = soundEnabled ? \"\\uD83D\\uDD0A\" : \"\\uD83D\\uDD07\";\n                soundToggle.setAttribute(\"aria-label\", soundEnabled ? \"Sound On\" : \"Sound Off\");\n            }\n            // Initialize audio if not already done\n            if (soundEnabled && !audioContext) {\n                initAudio();\n            }\n        }\n        // Animation loop\n        const timeStep = 1 / 60; // 60 frames per second\n        let lastCallTime; // For tracking accumulated time between frames\n        function animate() {\n            requestAnimationFrame(animate);\n            // Calculate actual time elapsed since last frame for smoother physics\n            const time = performance.now() / 1000; // Convert to seconds\n            if (!lastCallTime) {\n                // First frame, just initialize and return\n                lastCallTime = time;\n                return;\n            }\n            // Calculate time since last frame\n            let dt = time - lastCallTime;\n            lastCallTime = time;\n            // Cap max dt to prevent \"tunneling\" through objects when frame rate drops\n            if (dt > 0.1) dt = 0.1;\n            // Step the physics simulation with fixed time step\n            // This ensures physics simulation quality is consistent regardless of frame rate\n            world.step(timeStep, dt);\n            // Update visual objects to match physics\n            for(let i = 0; i < balls.length; i++){\n                if (balls[i] && balls[i].body && balls[i].mesh) {\n                    balls[i].mesh.position.copy(balls[i].body.position);\n                    balls[i].mesh.quaternion.copy(balls[i].body.quaternion);\n                    // Remove balls that hit the ground or fall too far\n                    if (balls[i].body.userData && balls[i].body.userData.shouldRemove || balls[i].body.position.y < -10) {\n                        scene.remove(balls[i].mesh);\n                        world.removeBody(balls[i].body);\n                        balls.splice(i, 1);\n                        i--;\n                    } else if (balls[i].body.velocity.lengthSquared() < 0.05) {\n                        balls[i].body.linearDamping = Math.min(balls[i].body.linearDamping * 1.01, 0.95);\n                    }\n                }\n            }\n            renderer.render(scene, camera);\n        }\n        // Setup the scene\n        initScene();\n        initPhysics();\n        // Add event listeners\n        window.addEventListener(\"mousedown\", onMouseDown);\n        window.addEventListener(\"mousemove\", onMouseMove);\n        window.addEventListener(\"mouseup\", onMouseUp);\n        window.addEventListener(\"resize\", onWindowResize);\n        window.addEventListener(\"touchstart\", onTouchStart);\n        // Setup sound toggle\n        const soundToggle = document.getElementById(\"sound-toggle\");\n        if (soundToggle) {\n            soundToggle.addEventListener(\"click\", toggleSound);\n        }\n        // Start animation loop\n        animate();\n        // Cleanup function\n        return ()=>{\n            // Remove event listeners\n            window.removeEventListener(\"mousedown\", onMouseDown);\n            window.removeEventListener(\"mousemove\", onMouseMove);\n            window.removeEventListener(\"mouseup\", onMouseUp);\n            window.removeEventListener(\"resize\", onWindowResize);\n            window.removeEventListener(\"touchstart\", onTouchStart);\n            // Remove sound toggle listener\n            const soundToggle = document.getElementById(\"sound-toggle\");\n            if (soundToggle) {\n                soundToggle.removeEventListener(\"click\", toggleSound);\n            }\n            // Stop animation frame\n            cancelAnimationFrame(animate);\n            // Dispose renderer\n            if (renderer) {\n                renderer.dispose();\n            }\n            // Remove canvas from DOM\n            if (mountRef.current && renderer && renderer.domElement) {\n                mountRef.current.removeChild(renderer.domElement);\n            }\n        };\n    }, []);\n    // Function to update platform bounciness\n    const handleBouncinessChange = (event)=>{\n        const newRestitution = parseFloat(event.target.value);\n        // Update both the contact material and platform material restitution\n        if (contactMaterialRef.current) {\n            contactMaterialRef.current.restitution = newRestitution;\n        }\n        // Update the platform material's restitution for new contacts\n        if (platformMaterialRef.current) {\n            platformMaterialRef.current.restitution = newRestitution;\n        }\n        // Update display value\n        const display = document.getElementById(\"bounciness-value\");\n        if (display) {\n            display.textContent = newRestitution.toFixed(2);\n        }\n        // Play a subtle feedback tone when value changes\n        if (window.playBounceSound) {\n            window.playBounceSound(newRestitution * 0.3);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"scene-container\",\n        ref: mountRef,\n        style: {\n            width: \"100%\",\n            height: \"100vh\"\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                id: \"instructions\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                        children: \"Musical Bounce Controls\"\n                    }, void 0, false, {\n                        fileName: \"/Users/arcades/Code/Bounce-webvr/components/BounceScene.js\",\n                        lineNumber: 629,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: \"Click to drop balls\"\n                    }, void 0, false, {\n                        fileName: \"/Users/arcades/Code/Bounce-webvr/components/BounceScene.js\",\n                        lineNumber: 630,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: \"Shift + Click + Drag to create walls\"\n                    }, void 0, false, {\n                        fileName: \"/Users/arcades/Code/Bounce-webvr/components/BounceScene.js\",\n                        lineNumber: 631,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: \"Wall length determines pitch (2 octaves of C major)\"\n                    }, void 0, false, {\n                        fileName: \"/Users/arcades/Code/Bounce-webvr/components/BounceScene.js\",\n                        lineNumber: 632,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"slider-container\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                htmlFor: \"bounciness-slider\",\n                                children: \"Platform Bounciness:\"\n                            }, void 0, false, {\n                                fileName: \"/Users/arcades/Code/Bounce-webvr/components/BounceScene.js\",\n                                lineNumber: 634,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                type: \"range\",\n                                id: \"bounciness-slider\",\n                                name: \"bounciness\",\n                                min: \"0.1\",\n                                max: \"10.0\",\n                                step: \"0.2\",\n                                defaultValue: \"0.5\",\n                                onChange: handleBouncinessChange,\n                                \"aria-label\": \"Adjust Platform Bounciness\"\n                            }, void 0, false, {\n                                fileName: \"/Users/arcades/Code/Bounce-webvr/components/BounceScene.js\",\n                                lineNumber: 635,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                id: \"bounciness-value\",\n                                children: \"0.50\"\n                            }, void 0, false, {\n                                fileName: \"/Users/arcades/Code/Bounce-webvr/components/BounceScene.js\",\n                                lineNumber: 646,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/arcades/Code/Bounce-webvr/components/BounceScene.js\",\n                        lineNumber: 633,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/arcades/Code/Bounce-webvr/components/BounceScene.js\",\n                lineNumber: 628,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                id: \"sound-toggle\",\n                \"aria-label\": \"Toggle sound\",\n                children: \"\\uD83D\\uDD0A\"\n            }, void 0, false, {\n                fileName: \"/Users/arcades/Code/Bounce-webvr/components/BounceScene.js\",\n                lineNumber: 649,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_NoteDisplay__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                isDrawing: isDrawing,\n                wallLength: wallLength\n            }, void 0, false, {\n                fileName: \"/Users/arcades/Code/Bounce-webvr/components/BounceScene.js\",\n                lineNumber: 650,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/arcades/Code/Bounce-webvr/components/BounceScene.js\",\n        lineNumber: 627,\n        columnNumber: 5\n    }, this);\n}\n// Add some basic styling for the slider\n// Ideally, this would go in a separate CSS file\nconst styles = `\n.slider-container {\n  margin-top: 10px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n#bounciness-slider {\n  width: 150px;\n}\n\n#bounciness-value {\n  min-width: 30px; /* Prevent layout shift */\n  text-align: right;\n}\n\n/* You might need styles for #instructions, #sound-toggle etc. */\n#instructions {\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  background: rgba(0, 0, 0, 0.7);\n  color: white;\n  padding: 10px;\n  border-radius: 5px;\n  z-index: 10;\n}\n\n#sound-toggle {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 1.5em;\n  background: none;\n  border: none;\n  cursor: pointer;\n  z-index: 10;\n}\n`;\n// Inject styles into the head - simple way for this example\nif (false) {}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/BounceScene.js\n");

/***/ }),

/***/ "./components/NoteDisplay.js":
/*!***********************************!*\
  !*** ./components/NoteDisplay.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ NoteDisplay)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_midiSequencer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/midiSequencer */ \"./utils/midiSequencer.js\");\n\n\n\n/**\n * Component to display the current note when drawing walls\n */ function NoteDisplay({ isDrawing, wallLength }) {\n    const [note, setNote] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    // Update note when wall length changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (isDrawing && wallLength > 0) {\n            setNote((0,_utils_midiSequencer__WEBPACK_IMPORTED_MODULE_2__.mapLengthToNote)(wallLength));\n        } else {\n            setNote(\"\");\n        }\n    }, [\n        isDrawing,\n        wallLength\n    ]);\n    // Don't render anything if not drawing\n    if (!isDrawing || !note) {\n        return null;\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"note-display\",\n        \"aria-live\": \"polite\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"note-display-content\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                    children: \"Current Note: \"\n                }, void 0, false, {\n                    fileName: \"/Users/arcades/Code/Bounce-webvr/components/NoteDisplay.js\",\n                    lineNumber: 27,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                    children: note\n                }, void 0, false, {\n                    fileName: \"/Users/arcades/Code/Bounce-webvr/components/NoteDisplay.js\",\n                    lineNumber: 28,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/arcades/Code/Bounce-webvr/components/NoteDisplay.js\",\n            lineNumber: 26,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/arcades/Code/Bounce-webvr/components/NoteDisplay.js\",\n        lineNumber: 25,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL05vdGVEaXNwbGF5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBNEM7QUFDYTtBQUV6RDs7Q0FFQyxHQUNjLFNBQVNHLFlBQVksRUFBRUMsU0FBUyxFQUFFQyxVQUFVLEVBQUU7SUFDM0QsTUFBTSxDQUFDQyxNQUFNQyxRQUFRLEdBQUdOLCtDQUFRQSxDQUFDO0lBRWpDLHVDQUF1QztJQUN2Q0QsZ0RBQVNBLENBQUM7UUFDUixJQUFJSSxhQUFhQyxhQUFhLEdBQUc7WUFDL0JFLFFBQVFMLHFFQUFlQSxDQUFDRztRQUMxQixPQUFPO1lBQ0xFLFFBQVE7UUFDVjtJQUNGLEdBQUc7UUFBQ0g7UUFBV0M7S0FBVztJQUUxQix1Q0FBdUM7SUFDdkMsSUFBSSxDQUFDRCxhQUFhLENBQUNFLE1BQU07UUFDdkIsT0FBTztJQUNUO0lBRUEscUJBQ0UsOERBQUNFO1FBQUlDLFdBQVU7UUFBZUMsYUFBVTtrQkFDdEMsNEVBQUNGO1lBQUlDLFdBQVU7OzhCQUNiLDhEQUFDRTs4QkFBSzs7Ozs7OzhCQUNOLDhEQUFDQzs4QkFBUU47Ozs7Ozs7Ozs7Ozs7Ozs7O0FBSWpCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYm91bmNlLXdlYnZyLy4vY29tcG9uZW50cy9Ob3RlRGlzcGxheS5qcz85MjIwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBtYXBMZW5ndGhUb05vdGUgfSBmcm9tICcuLi91dGlscy9taWRpU2VxdWVuY2VyJztcblxuLyoqXG4gKiBDb21wb25lbnQgdG8gZGlzcGxheSB0aGUgY3VycmVudCBub3RlIHdoZW4gZHJhd2luZyB3YWxsc1xuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBOb3RlRGlzcGxheSh7IGlzRHJhd2luZywgd2FsbExlbmd0aCB9KSB7XG4gIGNvbnN0IFtub3RlLCBzZXROb3RlXSA9IHVzZVN0YXRlKCcnKTtcbiAgXG4gIC8vIFVwZGF0ZSBub3RlIHdoZW4gd2FsbCBsZW5ndGggY2hhbmdlc1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChpc0RyYXdpbmcgJiYgd2FsbExlbmd0aCA+IDApIHtcbiAgICAgIHNldE5vdGUobWFwTGVuZ3RoVG9Ob3RlKHdhbGxMZW5ndGgpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2V0Tm90ZSgnJyk7XG4gICAgfVxuICB9LCBbaXNEcmF3aW5nLCB3YWxsTGVuZ3RoXSk7XG4gIFxuICAvLyBEb24ndCByZW5kZXIgYW55dGhpbmcgaWYgbm90IGRyYXdpbmdcbiAgaWYgKCFpc0RyYXdpbmcgfHwgIW5vdGUpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICBcbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cIm5vdGUtZGlzcGxheVwiIGFyaWEtbGl2ZT1cInBvbGl0ZVwiPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJub3RlLWRpc3BsYXktY29udGVudFwiPlxuICAgICAgICA8c3Bhbj5DdXJyZW50IE5vdGU6IDwvc3Bhbj5cbiAgICAgICAgPHN0cm9uZz57bm90ZX08L3N0cm9uZz5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufSAiXSwibmFtZXMiOlsidXNlRWZmZWN0IiwidXNlU3RhdGUiLCJtYXBMZW5ndGhUb05vdGUiLCJOb3RlRGlzcGxheSIsImlzRHJhd2luZyIsIndhbGxMZW5ndGgiLCJub3RlIiwic2V0Tm90ZSIsImRpdiIsImNsYXNzTmFtZSIsImFyaWEtbGl2ZSIsInNwYW4iLCJzdHJvbmciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/NoteDisplay.js\n");

/***/ }),

/***/ "./utils/midiSequencer.js":
/*!********************************!*\
  !*** ./utils/midiSequencer.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QuantizationSettings: () => (/* binding */ QuantizationSettings),\n/* harmony export */   getNoteColor: () => (/* binding */ getNoteColor),\n/* harmony export */   mapLengthToFrequency: () => (/* binding */ mapLengthToFrequency),\n/* harmony export */   mapLengthToNote: () => (/* binding */ mapLengthToNote),\n/* harmony export */   playNoteForLength: () => (/* binding */ playNoteForLength),\n/* harmony export */   quantizeLength: () => (/* binding */ quantizeLength)\n/* harmony export */ });\n/**\n * MIDI Sequencer Utility\n * Handles converting bar lengths to MIDI notes and playing them\n */ // C major scale notes for two octaves (C4 to C6)\nconst MAJOR_SCALE_FREQUENCIES = {\n    // First octave (C4 - B4)\n    \"C4\": 261.63,\n    \"D4\": 293.66,\n    \"E4\": 329.63,\n    \"F4\": 349.23,\n    \"G4\": 392.00,\n    \"A4\": 440.00,\n    \"B4\": 493.88,\n    // Second octave (C5 - B5)\n    \"C5\": 523.25,\n    \"D5\": 587.33,\n    \"E5\": 659.26,\n    \"F5\": 698.46,\n    \"G5\": 783.99,\n    \"A5\": 880.00,\n    \"B5\": 987.77,\n    // C6 for completion\n    \"C6\": 1046.50\n};\n// Array for easier access - C major scale (C, D, E, F, G, A, B)\nconst MAJOR_SCALE_NOTES = [\n    \"C4\",\n    \"D4\",\n    \"E4\",\n    \"F4\",\n    \"G4\",\n    \"A4\",\n    \"B4\",\n    \"C5\",\n    \"D5\",\n    \"E5\",\n    \"F5\",\n    \"G5\",\n    \"A5\",\n    \"B5\",\n    \"C6\"\n];\n/**\n * Maps a wall length to a note in the C major scale\n * @param {number} length - The length of the wall\n * @param {number} minLength - Minimum wall length that maps to the lowest note\n * @param {number} maxLength - Maximum wall length that maps to the highest note\n * @returns {string} The note name (e.g., 'C4', 'D4', etc.)\n */ function mapLengthToNote(length, minLength = 0.2, maxLength = 3.0) {\n    // Clamp length to min/max range\n    const clampedLength = Math.max(minLength, Math.min(length, maxLength));\n    // Calculate normalized position in the range [0, 1]\n    const normalizedPos = (clampedLength - minLength) / (maxLength - minLength);\n    // Map to an index in the scale\n    const noteIndex = Math.floor(normalizedPos * MAJOR_SCALE_NOTES.length);\n    // Return the corresponding note\n    return MAJOR_SCALE_NOTES[Math.min(noteIndex, MAJOR_SCALE_NOTES.length - 1)];\n}\n/**\n * Maps a wall length to a frequency\n * @param {number} length - The length of the wall\n * @param {number} minLength - Minimum wall length that maps to the lowest note\n * @param {number} maxLength - Maximum wall length that maps to the highest note\n * @returns {number} The frequency in Hz\n */ function mapLengthToFrequency(length, minLength = 0.2, maxLength = 3.0) {\n    const note = mapLengthToNote(length, minLength, maxLength);\n    return MAJOR_SCALE_FREQUENCIES[note];\n}\n/**\n * Plays a note based on the wall length using the Web Audio API\n * @param {AudioContext} audioContext - The audio context to use\n * @param {number} length - The length of the wall\n * @param {number} duration - The duration of the note in seconds\n * @param {number} volume - The volume of the note (0-1)\n * @param {string} waveform - The oscillator waveform type ('sine', 'square', 'sawtooth', 'triangle')\n * @returns {Object} The oscillator and gain nodes\n */ function playNoteForLength(audioContext, length, duration = 0.5, volume = 0.5, waveform = \"sine\") {\n    if (!audioContext) return null;\n    const frequency = mapLengthToFrequency(length);\n    // Create oscillator and gain nodes\n    const oscillator = audioContext.createOscillator();\n    const gainNode = audioContext.createGain();\n    // Configure oscillator\n    oscillator.type = waveform;\n    oscillator.frequency.setValueAtTime(frequency, audioContext.currentTime);\n    // Configure gain (volume with fade out)\n    gainNode.gain.setValueAtTime(volume, audioContext.currentTime);\n    gainNode.gain.exponentialRampToValueAtTime(0.001, audioContext.currentTime + duration);\n    // Connect nodes\n    oscillator.connect(gainNode);\n    gainNode.connect(audioContext.destination);\n    // Start and stop the oscillator\n    oscillator.start();\n    oscillator.stop(audioContext.currentTime + duration);\n    return {\n        oscillator,\n        gainNode,\n        frequency,\n        note: mapLengthToNote(length)\n    };\n}\n/**\n * Gets the color for a specific note\n * @param {string} note - The note name\n * @returns {number} The color as a hexadecimal number\n */ function getNoteColor(note) {\n    // Simple color map based on note position in the scale\n    const noteIndex = MAJOR_SCALE_NOTES.indexOf(note);\n    // Create a hue value based on the note position (rainbow effect)\n    const hue = noteIndex / MAJOR_SCALE_NOTES.length * 360;\n    // Convert HSL to RGB (simple conversion for demonstration)\n    const h = hue / 60;\n    const s = 0.8; // saturation\n    const l = 0.5; // lightness\n    const c = (1 - Math.abs(2 * l - 1)) * s;\n    const x = c * (1 - Math.abs(h % 2 - 1));\n    const m = l - c / 2;\n    let r, g, b;\n    if (h >= 0 && h < 1) {\n        r = c;\n        g = x;\n        b = 0;\n    } else if (h >= 1 && h < 2) {\n        r = x;\n        g = c;\n        b = 0;\n    } else if (h >= 2 && h < 3) {\n        r = 0;\n        g = c;\n        b = x;\n    } else if (h >= 3 && h < 4) {\n        r = 0;\n        g = x;\n        b = c;\n    } else if (h >= 4 && h < 5) {\n        r = x;\n        g = 0;\n        b = c;\n    } else {\n        r = c;\n        g = 0;\n        b = x;\n    }\n    r = Math.round((r + m) * 255);\n    g = Math.round((g + m) * 255);\n    b = Math.round((b + m) * 255);\n    // Convert RGB to hex\n    return r << 16 | g << 8 | b;\n}\n/**\n * Structure for future quantization settings\n * This allows for modular implementation of quantization later\n */ const QuantizationSettings = {\n    NONE: {\n        id: \"none\",\n        name: \"None\",\n        value: 0\n    },\n    EIGHTH: {\n        id: \"eighth\",\n        name: \"Eighth Notes\",\n        value: 8\n    },\n    QUARTER: {\n        id: \"quarter\",\n        name: \"Quarter Notes\",\n        value: 4\n    },\n    HALF: {\n        id: \"half\",\n        name: \"Half Notes\",\n        value: 2\n    },\n    WHOLE: {\n        id: \"whole\",\n        name: \"Whole Notes\",\n        value: 1\n    }\n};\n/**\n * Placeholder for future quantization function\n * @param {number} length - The raw length value\n * @param {Object} quantSettings - The quantization settings\n * @returns {number} The quantized length\n */ function quantizeLength(length, quantSettings = QuantizationSettings.NONE) {\n    if (quantSettings.id === \"none\") {\n        return length; // No quantization\n    }\n    // This is where custom quantization logic will go in the future\n    // For now, we're just returning the original length\n    return length;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./utils/midiSequencer.js\n");

/***/ })

};
;