"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "components_BounceScene_js";
exports.ids = ["components_BounceScene_js"];
exports.modules = {

/***/ "./components/BounceScene.js":
/*!***********************************!*\
  !*** ./components/BounceScene.js ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BounceScene)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var cannon_es__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! cannon-es */ \"cannon-es\");\n/* harmony import */ var cannon_es__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(cannon_es__WEBPACK_IMPORTED_MODULE_3__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([three__WEBPACK_IMPORTED_MODULE_2__]);\nthree__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n// Define physics materials\nconst ballMaterial = new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Material(\"ballMaterial\");\nballMaterial.friction = 0.3;\nballMaterial.restitution = 0.7; // Default ball restitution\nconst platformMaterial = new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Material(\"platformMaterial\");\nplatformMaterial.friction = 0.1; // Low friction for platforms\nplatformMaterial.restitution = 0.5; // Default platform restitution (will be controlled by slider)\nfunction BounceScene() {\n    const mountRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (true) return;\n        // Scene variables\n        let scene, camera, renderer;\n        let world;\n        let balls = [];\n        let walls = [];\n        let wallBodies = [];\n        let isDrawing = false;\n        let wallStart = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3();\n        let wallEnd = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3();\n        let currentWallMesh = null;\n        let audioContext;\n        let soundEnabled = true;\n        // Keep track of the shared platform material contact properties\n        let ballPlatformContactMaterial1;\n        // Audio context for sound effects\n        function initAudio() {\n            audioContext = new (window.AudioContext || window.webkitAudioContext)();\n            // Create success sound function\n            window.playBounceSound = (intensity = 1.0)=>{\n                if (!soundEnabled || !audioContext) return;\n                const oscillator = audioContext.createOscillator();\n                const gainNode = audioContext.createGain();\n                oscillator.type = \"sine\";\n                oscillator.frequency.setValueAtTime(300 + intensity * 200, audioContext.currentTime);\n                oscillator.frequency.exponentialRampToValueAtTime(200, audioContext.currentTime + 0.1);\n                gainNode.gain.setValueAtTime(intensity * 0.3, audioContext.currentTime);\n                gainNode.gain.exponentialRampToValueAtTime(0.001, audioContext.currentTime + 0.2);\n                oscillator.connect(gainNode);\n                gainNode.connect(audioContext.destination);\n                oscillator.start();\n                oscillator.stop(audioContext.currentTime + 0.2);\n            };\n        }\n        // Initialize Three.js scene\n        function initScene() {\n            // Scene setup\n            scene = new three__WEBPACK_IMPORTED_MODULE_2__.Scene();\n            scene.background = new three__WEBPACK_IMPORTED_MODULE_2__.Color(0x000000); // Black background\n            // Camera setup\n            camera = new three__WEBPACK_IMPORTED_MODULE_2__.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n            camera.position.z = 5;\n            // Renderer setup\n            renderer = new three__WEBPACK_IMPORTED_MODULE_2__.WebGLRenderer({\n                antialias: true\n            });\n            renderer.setSize(window.innerWidth, window.innerHeight);\n            renderer.shadowMap.enabled = true;\n            mountRef.current.appendChild(renderer.domElement);\n            // Lighting\n            const ambientLight = new three__WEBPACK_IMPORTED_MODULE_2__.AmbientLight(0xffffff, 0.5);\n            scene.add(ambientLight);\n            const directionalLight = new three__WEBPACK_IMPORTED_MODULE_2__.DirectionalLight(0xffffff, 0.8);\n            directionalLight.position.set(10, 20, 15);\n            directionalLight.castShadow = true;\n            directionalLight.shadow.mapSize.width = 2048;\n            directionalLight.shadow.mapSize.height = 2048;\n            scene.add(directionalLight);\n        }\n        // Initialize physics world\n        function initPhysics() {\n            world = new cannon_es__WEBPACK_IMPORTED_MODULE_3__.World({\n                gravity: new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Vec3(0, -9.82, 0)\n            });\n            // Add contact material between balls and platforms\n            ballPlatformContactMaterial1 = new cannon_es__WEBPACK_IMPORTED_MODULE_3__.ContactMaterial(ballMaterial, platformMaterial, {\n                friction: 0.0,\n                restitution: platformMaterial.restitution\n            });\n            world.addContactMaterial(ballPlatformContactMaterial1);\n            // Ground plane - invisible physics plane\n            const groundBody = new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Body({\n                type: cannon_es__WEBPACK_IMPORTED_MODULE_3__.Body.STATIC,\n                shape: new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Plane(),\n                material: platformMaterial // Assign platform material\n            });\n            groundBody.quaternion.setFromAxisAngle(new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Vec3(1, 0, 0), -Math.PI / 2);\n            groundBody.position.y = -2;\n            world.addBody(groundBody);\n            // Visible ground plane\n            const groundGeometry = new three__WEBPACK_IMPORTED_MODULE_2__.PlaneGeometry(10, 10);\n            const groundMaterial = new three__WEBPACK_IMPORTED_MODULE_2__.MeshStandardMaterial({\n                color: 0x228B22,\n                roughness: 0.7,\n                metalness: 0.1\n            });\n            const ground = new three__WEBPACK_IMPORTED_MODULE_2__.Mesh(groundGeometry, groundMaterial);\n            ground.rotation.x = -Math.PI / 2;\n            ground.position.y = -2;\n            ground.receiveShadow = true;\n            scene.add(ground);\n        }\n        // Create a ball at the specified position\n        function createBall(position) {\n            const radius = 0.2;\n            // Physical body\n            const ballBody = new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Body({\n                mass: 1,\n                shape: new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Sphere(radius),\n                position: new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Vec3(position.x, position.y, position.z),\n                linearDamping: 0.1,\n                material: ballMaterial // Assign ball material\n            });\n            world.addBody(ballBody);\n            // Listen for collision events to play sounds\n            ballBody.addEventListener(\"collide\", (event)=>{\n                const relativeVelocity = event.contact.getImpactVelocityAlongNormal();\n                if (window.playBounceSound && Math.abs(relativeVelocity) > 0.5) {\n                    const intensity = Math.min(Math.abs(relativeVelocity) / 10, 1);\n                    window.playBounceSound(intensity);\n                }\n            });\n            // Visual ball\n            const ballGeometry = new three__WEBPACK_IMPORTED_MODULE_2__.SphereGeometry(radius, 32, 32);\n            const visualBallMaterial = new three__WEBPACK_IMPORTED_MODULE_2__.MeshStandardMaterial({\n                color: Math.random() * 0xffffff,\n                roughness: 0.4,\n                metalness: 0.3\n            });\n            const ballMesh = new three__WEBPACK_IMPORTED_MODULE_2__.Mesh(ballGeometry, visualBallMaterial);\n            ballMesh.castShadow = true;\n            ballMesh.receiveShadow = true;\n            scene.add(ballMesh);\n            return {\n                body: ballBody,\n                mesh: ballMesh\n            };\n        }\n        // Create a wall between two points\n        function createWall(start, end) {\n            // Calculate wall properties\n            const direction = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3().subVectors(end, start);\n            const length = direction.length();\n            const center = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3().addVectors(start, end).multiplyScalar(0.5);\n            // Calculate rotation to align with direction\n            const wallDirection = direction.clone().normalize();\n            const angle = Math.atan2(wallDirection.x, wallDirection.y);\n            // Create physical wall\n            const wallShape = new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Box(new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Vec3(length / 2, 0.1, 0.1));\n            const wallBody = new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Body({\n                mass: 0,\n                position: new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Vec3(center.x, center.y, center.z),\n                shape: wallShape,\n                material: platformMaterial // Assign platform material\n            });\n            // Rotate to match visual representation\n            wallBody.quaternion.setFromAxisAngle(new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Vec3(0, 0, 1), -angle);\n            world.addBody(wallBody);\n            wallBodies.push(wallBody);\n            // Create visual wall\n            const wallGeometry = new three__WEBPACK_IMPORTED_MODULE_2__.BoxGeometry(length, 0.2, 0.2);\n            const wallMaterial = new three__WEBPACK_IMPORTED_MODULE_2__.MeshStandardMaterial({\n                color: 0x8B4513,\n                roughness: 0.8,\n                metalness: 0.2\n            });\n            const wallMesh = new three__WEBPACK_IMPORTED_MODULE_2__.Mesh(wallGeometry, wallMaterial);\n            wallMesh.position.copy(center);\n            wallMesh.rotation.z = -angle;\n            wallMesh.castShadow = true;\n            wallMesh.receiveShadow = true;\n            scene.add(wallMesh);\n            walls.push(wallMesh);\n            return {\n                body: wallBody,\n                mesh: wallMesh\n            };\n        }\n        // Update temporary wall while drawing\n        function updateTempWall() {\n            if (currentWallMesh) {\n                scene.remove(currentWallMesh);\n            }\n            const direction = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3().subVectors(wallEnd, wallStart);\n            const length = direction.length();\n            const center = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3().addVectors(wallStart, wallEnd).multiplyScalar(0.5);\n            const wallDirection = direction.clone().normalize();\n            const angle = Math.atan2(wallDirection.x, wallDirection.y);\n            const wallGeometry = new three__WEBPACK_IMPORTED_MODULE_2__.BoxGeometry(length, 0.2, 0.2);\n            const wallMaterial = new three__WEBPACK_IMPORTED_MODULE_2__.MeshStandardMaterial({\n                color: 0xADD8E6,\n                transparent: true,\n                opacity: 0.7,\n                roughness: 0.8\n            });\n            currentWallMesh = new three__WEBPACK_IMPORTED_MODULE_2__.Mesh(wallGeometry, wallMaterial);\n            currentWallMesh.position.copy(center);\n            currentWallMesh.rotation.z = -angle;\n            scene.add(currentWallMesh);\n        }\n        // Raycaster for mouse interaction\n        const raycaster = new three__WEBPACK_IMPORTED_MODULE_2__.Raycaster();\n        const mouse = new three__WEBPACK_IMPORTED_MODULE_2__.Vector2();\n        const drawingPlane = new three__WEBPACK_IMPORTED_MODULE_2__.Plane(new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(0, 0, 1), 0);\n        // Mouse event handlers\n        function onMouseDown(event) {\n            // Get mouse position\n            mouse.x = event.clientX / window.innerWidth * 2 - 1;\n            mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n            // Initialize audio on first interaction\n            if (!audioContext) {\n                initAudio();\n            }\n            // Cast ray from mouse position into scene\n            raycaster.setFromCamera(mouse, camera);\n            // If shift is held, start drawing a wall\n            if (event.shiftKey) {\n                isDrawing = true;\n                const intersection = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3();\n                raycaster.ray.intersectPlane(drawingPlane, intersection);\n                wallStart = intersection.clone();\n                wallEnd = intersection.clone();\n                updateTempWall();\n            } else {\n                // Otherwise, drop a ball\n                const intersection = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3();\n                raycaster.ray.intersectPlane(drawingPlane, intersection);\n                const ball = createBall(intersection);\n                balls.push(ball);\n            }\n        }\n        function onMouseMove(event) {\n            mouse.x = event.clientX / window.innerWidth * 2 - 1;\n            mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n            if (isDrawing) {\n                raycaster.setFromCamera(mouse, camera);\n                const intersection = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3();\n                raycaster.ray.intersectPlane(drawingPlane, intersection);\n                wallEnd = intersection;\n                updateTempWall();\n            }\n        }\n        function onMouseUp(event) {\n            if (isDrawing) {\n                isDrawing = false;\n                // Only create a wall if it has some length\n                if (wallStart.distanceTo(wallEnd) > 0.2) {\n                    createWall(wallStart, wallEnd);\n                    // Remove temporary wall\n                    if (currentWallMesh) {\n                        scene.remove(currentWallMesh);\n                        currentWallMesh = null;\n                    }\n                }\n            }\n        }\n        // Handle window resize\n        function onWindowResize() {\n            camera.aspect = window.innerWidth / window.innerHeight;\n            camera.updateProjectionMatrix();\n            renderer.setSize(window.innerWidth, window.innerHeight);\n        }\n        // Allow dropping a ball with a touch on mobile\n        function onTouchStart(event) {\n            // Initialize audio on first interaction\n            if (!audioContext) {\n                initAudio();\n            }\n            event.preventDefault();\n            const touch = event.touches[0];\n            mouse.x = touch.clientX / window.innerWidth * 2 - 1;\n            mouse.y = -(touch.clientY / window.innerHeight) * 2 + 1;\n            raycaster.setFromCamera(mouse, camera);\n            const intersection = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3();\n            raycaster.ray.intersectPlane(drawingPlane, intersection);\n            const ball = createBall(intersection);\n            balls.push(ball);\n        }\n        // Toggle sound\n        function toggleSound() {\n            soundEnabled = !soundEnabled;\n            const soundToggle = document.getElementById(\"sound-toggle\");\n            if (soundToggle) {\n                soundToggle.textContent = soundEnabled ? \"\\uD83D\\uDD0A\" : \"\\uD83D\\uDD07\";\n                soundToggle.setAttribute(\"aria-label\", soundEnabled ? \"Sound On\" : \"Sound Off\");\n            }\n            // Initialize audio if not already done\n            if (soundEnabled && !audioContext) {\n                initAudio();\n            }\n        }\n        // Animation loop\n        const timeStep = 1 / 60;\n        function animate() {\n            requestAnimationFrame(animate);\n            // Update physics\n            world.step(timeStep);\n            // Update visual objects to match physics\n            for(let i = 0; i < balls.length; i++){\n                balls[i].mesh.position.copy(balls[i].body.position);\n                balls[i].mesh.quaternion.copy(balls[i].body.quaternion);\n                // Remove balls that fall too far\n                if (balls[i].body.position.y < -10) {\n                    scene.remove(balls[i].mesh);\n                    world.removeBody(balls[i].body);\n                    balls.splice(i, 1);\n                    i--;\n                }\n            }\n            renderer.render(scene, camera);\n        }\n        // Setup the scene\n        initScene();\n        initPhysics();\n        // Add event listeners\n        window.addEventListener(\"mousedown\", onMouseDown);\n        window.addEventListener(\"mousemove\", onMouseMove);\n        window.addEventListener(\"mouseup\", onMouseUp);\n        window.addEventListener(\"resize\", onWindowResize);\n        window.addEventListener(\"touchstart\", onTouchStart);\n        // Setup sound toggle\n        const soundToggle = document.getElementById(\"sound-toggle\");\n        if (soundToggle) {\n            soundToggle.addEventListener(\"click\", toggleSound);\n        }\n        // Start animation loop\n        animate();\n        // Cleanup function\n        return ()=>{\n            // Remove event listeners\n            window.removeEventListener(\"mousedown\", onMouseDown);\n            window.removeEventListener(\"mousemove\", onMouseMove);\n            window.removeEventListener(\"mouseup\", onMouseUp);\n            window.removeEventListener(\"resize\", onWindowResize);\n            window.removeEventListener(\"touchstart\", onTouchStart);\n            // Remove sound toggle listener\n            const soundToggle = document.getElementById(\"sound-toggle\");\n            if (soundToggle) {\n                soundToggle.removeEventListener(\"click\", toggleSound);\n            }\n            // Stop animation frame\n            cancelAnimationFrame(animate);\n            // Dispose renderer\n            if (renderer) {\n                renderer.dispose();\n            }\n            // Remove canvas from DOM\n            if (mountRef.current && renderer && renderer.domElement) {\n                mountRef.current.removeChild(renderer.domElement);\n            }\n        };\n    }, []);\n    // Function to update platform bounciness\n    const handleBouncinessChange = (event)=>{\n        const newRestitution = parseFloat(event.target.value);\n        if (ballPlatformContactMaterial) {\n            ballPlatformContactMaterial.restitution = newRestitution;\n        }\n        // Update display value\n        const display = document.getElementById(\"bounciness-value\");\n        if (display) {\n            display.textContent = newRestitution.toFixed(2);\n        }\n    // Optional: Play a subtle tone here\n    // e.g., playTickSound(newRestitution);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"scene-container\",\n        ref: mountRef,\n        style: {\n            width: \"100%\",\n            height: \"100vh\"\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                id: \"instructions\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                        children: \"Bounce Controls\"\n                    }, void 0, false, {\n                        fileName: \"/Users/arcades/Code/Bounce-webvr/components/BounceScene.js\",\n                        lineNumber: 438,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: \"Click to drop balls\"\n                    }, void 0, false, {\n                        fileName: \"/Users/arcades/Code/Bounce-webvr/components/BounceScene.js\",\n                        lineNumber: 439,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: \"Shift + Click + Drag to create walls\"\n                    }, void 0, false, {\n                        fileName: \"/Users/arcades/Code/Bounce-webvr/components/BounceScene.js\",\n                        lineNumber: 440,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"slider-container\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                htmlFor: \"bounciness-slider\",\n                                children: \"Platform Bounciness:\"\n                            }, void 0, false, {\n                                fileName: \"/Users/arcades/Code/Bounce-webvr/components/BounceScene.js\",\n                                lineNumber: 442,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                type: \"range\",\n                                id: \"bounciness-slider\",\n                                name: \"bounciness\",\n                                min: \"0.1\",\n                                max: \"2.0\",\n                                step: \"0.1\",\n                                defaultValue: platformMaterial.restitution,\n                                onChange: handleBouncinessChange,\n                                \"aria-label\": \"Adjust Platform Bounciness\"\n                            }, void 0, false, {\n                                fileName: \"/Users/arcades/Code/Bounce-webvr/components/BounceScene.js\",\n                                lineNumber: 443,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                id: \"bounciness-value\",\n                                children: platformMaterial.restitution.toFixed(2)\n                            }, void 0, false, {\n                                fileName: \"/Users/arcades/Code/Bounce-webvr/components/BounceScene.js\",\n                                lineNumber: 454,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/arcades/Code/Bounce-webvr/components/BounceScene.js\",\n                        lineNumber: 441,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/arcades/Code/Bounce-webvr/components/BounceScene.js\",\n                lineNumber: 437,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                id: \"sound-toggle\",\n                \"aria-label\": \"Toggle sound\",\n                children: \"\\uD83D\\uDD0A\"\n            }, void 0, false, {\n                fileName: \"/Users/arcades/Code/Bounce-webvr/components/BounceScene.js\",\n                lineNumber: 457,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/arcades/Code/Bounce-webvr/components/BounceScene.js\",\n        lineNumber: 436,\n        columnNumber: 5\n    }, this);\n}\n// Add some basic styling for the slider\n// Ideally, this would go in a separate CSS file\nconst styles = `\n.slider-container {\n  margin-top: 10px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n#bounciness-slider {\n  width: 150px;\n}\n\n#bounciness-value {\n  min-width: 30px; /* Prevent layout shift */\n  text-align: right;\n}\n\n/* You might need styles for #instructions, #sound-toggle etc. */\n#instructions {\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  background: rgba(0, 0, 0, 0.7);\n  color: white;\n  padding: 10px;\n  border-radius: 5px;\n  z-index: 10;\n}\n\n#sound-toggle {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 1.5em;\n  background: none;\n  border: none;\n  cursor: pointer;\n  z-index: 10;\n}\n`;\n// Inject styles into the head - simple way for this example\nif (false) {}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/BounceScene.js\n");

/***/ })

};
;