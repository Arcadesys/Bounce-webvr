"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "components_BounceScene_js";
exports.ids = ["components_BounceScene_js"];
exports.modules = {

/***/ "./components/BounceScene.js":
/*!***********************************!*\
  !*** ./components/BounceScene.js ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BounceScene)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var cannon_es__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! cannon-es */ \"cannon-es\");\n/* harmony import */ var cannon_es__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(cannon_es__WEBPACK_IMPORTED_MODULE_3__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([three__WEBPACK_IMPORTED_MODULE_2__]);\nthree__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n// Define physics materials\nconst ballMaterial = new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Material(\"ballMaterial\");\nballMaterial.friction = 0.3;\nballMaterial.restitution = 0.7; // Default ball restitution\nconst platformMaterial = new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Material(\"platformMaterial\");\nplatformMaterial.friction = 0.1; // Low friction for platforms\nplatformMaterial.restitution = 0.5; // Default platform restitution (will be controlled by slider)\nfunction BounceScene() {\n    const mountRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (true) return;\n        // Scene variables\n        let scene, camera, renderer;\n        let world;\n        let balls = [];\n        let walls = [];\n        let wallBodies = [];\n        let isDrawing = false;\n        let wallStart = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3();\n        let wallEnd = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3();\n        let currentWallMesh = null;\n        let audioContext;\n        let soundEnabled = true;\n        // Keep track of the shared platform material contact properties\n        let ballPlatformContactMaterial1;\n        // Audio context for sound effects\n        function initAudio() {\n            audioContext = new (window.AudioContext || window.webkitAudioContext)();\n            // Create success sound function\n            window.playBounceSound = (intensity = 1.0)=>{\n                if (!soundEnabled || !audioContext) return;\n                const oscillator = audioContext.createOscillator();\n                const gainNode = audioContext.createGain();\n                oscillator.type = \"sine\";\n                oscillator.frequency.setValueAtTime(300 + intensity * 200, audioContext.currentTime);\n                oscillator.frequency.exponentialRampToValueAtTime(200, audioContext.currentTime + 0.1);\n                gainNode.gain.setValueAtTime(intensity * 0.3, audioContext.currentTime);\n                gainNode.gain.exponentialRampToValueAtTime(0.001, audioContext.currentTime + 0.2);\n                oscillator.connect(gainNode);\n                gainNode.connect(audioContext.destination);\n                oscillator.start();\n                oscillator.stop(audioContext.currentTime + 0.2);\n            };\n        }\n        // Initialize Three.js scene\n        function initScene() {\n            // Scene setup\n            scene = new three__WEBPACK_IMPORTED_MODULE_2__.Scene();\n            scene.background = new three__WEBPACK_IMPORTED_MODULE_2__.Color(0x000000); // Black background\n            // Camera setup\n            camera = new three__WEBPACK_IMPORTED_MODULE_2__.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n            camera.position.z = 5;\n            // Renderer setup\n            renderer = new three__WEBPACK_IMPORTED_MODULE_2__.WebGLRenderer({\n                antialias: true\n            });\n            renderer.setSize(window.innerWidth, window.innerHeight);\n            renderer.shadowMap.enabled = true;\n            mountRef.current.appendChild(renderer.domElement);\n            // Lighting\n            const ambientLight = new three__WEBPACK_IMPORTED_MODULE_2__.AmbientLight(0xffffff, 0.5);\n            scene.add(ambientLight);\n            const directionalLight = new three__WEBPACK_IMPORTED_MODULE_2__.DirectionalLight(0xffffff, 0.8);\n            directionalLight.position.set(10, 20, 15);\n            directionalLight.castShadow = true;\n            directionalLight.shadow.mapSize.width = 2048;\n            directionalLight.shadow.mapSize.height = 2048;\n            scene.add(directionalLight);\n        }\n        // Initialize physics world\n        function initPhysics() {\n            world = new cannon_es__WEBPACK_IMPORTED_MODULE_3__.World({\n                gravity: new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Vec3(0, -9.82, 0)\n            });\n            // Add contact material between balls and platforms\n            ballPlatformContactMaterial1 = new cannon_es__WEBPACK_IMPORTED_MODULE_3__.ContactMaterial(ballMaterial, platformMaterial, {\n                friction: 0.0,\n                restitution: platformMaterial.restitution\n            });\n            world.addContactMaterial(ballPlatformContactMaterial1);\n            // Ground plane - invisible physics plane\n            const groundBody = new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Body({\n                type: cannon_es__WEBPACK_IMPORTED_MODULE_3__.Body.STATIC,\n                shape: new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Plane(),\n                material: platformMaterial // Assign platform material\n            });\n            groundBody.quaternion.setFromAxisAngle(new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Vec3(1, 0, 0), -Math.PI / 2);\n            groundBody.position.y = -2;\n            world.addBody(groundBody);\n            // Visible ground plane\n            const groundGeometry = new three__WEBPACK_IMPORTED_MODULE_2__.PlaneGeometry(10, 10);\n            const groundMaterial = new three__WEBPACK_IMPORTED_MODULE_2__.MeshStandardMaterial({\n                color: 0x228B22,\n                roughness: 0.7,\n                metalness: 0.1\n            });\n            const ground = new three__WEBPACK_IMPORTED_MODULE_2__.Mesh(groundGeometry, groundMaterial);\n            ground.rotation.x = -Math.PI / 2;\n            ground.position.y = -2;\n            ground.receiveShadow = true;\n            scene.add(ground);\n        }\n        // Create a ball at the specified position\n        function createBall(position) {\n            const radius = 0.2;\n            // Physical body\n            const ballBody = new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Body({\n                mass: 1,\n                shape: new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Sphere(radius),\n                position: new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Vec3(position.x, position.y, position.z),\n                linearDamping: 0.1,\n                material: ballMaterial // Assign ball material\n            });\n            world.addBody(ballBody);\n            // Listen for collision events to play sounds\n            ballBody.addEventListener(\"collide\", (event)=>{\n                const relativeVelocity = event.contact.getImpactVelocityAlongNormal();\n                if (window.playBounceSound && Math.abs(relativeVelocity) > 0.5) {\n                    const intensity = Math.min(Math.abs(relativeVelocity) / 10, 1);\n                    window.playBounceSound(intensity);\n                }\n            });\n            // Visual ball\n            const ballGeometry = new three__WEBPACK_IMPORTED_MODULE_2__.SphereGeometry(radius, 32, 32);\n            const ballMaterial = new three__WEBPACK_IMPORTED_MODULE_2__.MeshStandardMaterial({\n                color: Math.random() * 0xffffff,\n                roughness: 0.4,\n                metalness: 0.3\n            });\n            const ballMesh = new three__WEBPACK_IMPORTED_MODULE_2__.Mesh(ballGeometry, ballMaterial);\n            ballMesh.castShadow = true;\n            ballMesh.receiveShadow = true;\n            scene.add(ballMesh);\n            return {\n                body: ballBody,\n                mesh: ballMesh\n            };\n        }\n        // Create a wall between two points\n        function createWall(start, end) {\n            // Calculate wall properties\n            const direction = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3().subVectors(end, start);\n            const length = direction.length();\n            const center = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3().addVectors(start, end).multiplyScalar(0.5);\n            // Calculate rotation to align with direction\n            const wallDirection = direction.clone().normalize();\n            const angle = Math.atan2(wallDirection.x, wallDirection.y);\n            // Create physical wall\n            const wallShape = new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Box(new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Vec3(length / 2, 0.1, 0.1));\n            const wallBody = new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Body({\n                mass: 0,\n                position: new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Vec3(center.x, center.y, center.z),\n                shape: wallShape,\n                material: platformMaterial // Assign platform material\n            });\n            // Rotate to match visual representation\n            wallBody.quaternion.setFromAxisAngle(new cannon_es__WEBPACK_IMPORTED_MODULE_3__.Vec3(0, 0, 1), -angle);\n            world.addBody(wallBody);\n            wallBodies.push(wallBody);\n            // Create visual wall\n            const wallGeometry = new three__WEBPACK_IMPORTED_MODULE_2__.BoxGeometry(length, 0.2, 0.2);\n            const wallMaterial = new three__WEBPACK_IMPORTED_MODULE_2__.MeshStandardMaterial({\n                color: 0x8B4513,\n                roughness: 0.8,\n                metalness: 0.2\n            });\n            const wallMesh = new three__WEBPACK_IMPORTED_MODULE_2__.Mesh(wallGeometry, wallMaterial);\n            wallMesh.position.copy(center);\n            wallMesh.rotation.z = -angle;\n            wallMesh.castShadow = true;\n            wallMesh.receiveShadow = true;\n            scene.add(wallMesh);\n            walls.push(wallMesh);\n            return {\n                body: wallBody,\n                mesh: wallMesh\n            };\n        }\n        // Update temporary wall while drawing\n        function updateTempWall() {\n            if (currentWallMesh) {\n                scene.remove(currentWallMesh);\n            }\n            const direction = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3().subVectors(wallEnd, wallStart);\n            const length = direction.length();\n            const center = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3().addVectors(wallStart, wallEnd).multiplyScalar(0.5);\n            const wallDirection = direction.clone().normalize();\n            const angle = Math.atan2(wallDirection.x, wallDirection.y);\n            const wallGeometry = new three__WEBPACK_IMPORTED_MODULE_2__.BoxGeometry(length, 0.2, 0.2);\n            const wallMaterial = new three__WEBPACK_IMPORTED_MODULE_2__.MeshStandardMaterial({\n                color: 0xADD8E6,\n                transparent: true,\n                opacity: 0.7,\n                roughness: 0.8\n            });\n            currentWallMesh = new three__WEBPACK_IMPORTED_MODULE_2__.Mesh(wallGeometry, wallMaterial);\n            currentWallMesh.position.copy(center);\n            currentWallMesh.rotation.z = -angle;\n            scene.add(currentWallMesh);\n        }\n        // Raycaster for mouse interaction\n        const raycaster = new three__WEBPACK_IMPORTED_MODULE_2__.Raycaster();\n        const mouse = new three__WEBPACK_IMPORTED_MODULE_2__.Vector2();\n        const drawingPlane = new three__WEBPACK_IMPORTED_MODULE_2__.Plane(new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(0, 0, 1), 0);\n        // Mouse event handlers\n        function onMouseDown(event) {\n            // Get mouse position\n            mouse.x = event.clientX / window.innerWidth * 2 - 1;\n            mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n            // Initialize audio on first interaction\n            if (!audioContext) {\n                initAudio();\n            }\n            // Cast ray from mouse position into scene\n            raycaster.setFromCamera(mouse, camera);\n            // If shift is held, start drawing a wall\n            if (event.shiftKey) {\n                isDrawing = true;\n                const intersection = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3();\n                raycaster.ray.intersectPlane(drawingPlane, intersection);\n                wallStart = intersection.clone();\n                wallEnd = intersection.clone();\n                updateTempWall();\n            } else {\n                // Otherwise, drop a ball\n                const intersection = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3();\n                raycaster.ray.intersectPlane(drawingPlane, intersection);\n                const ball = createBall(intersection);\n                balls.push(ball);\n            }\n        }\n        function onMouseMove(event) {\n            mouse.x = event.clientX / window.innerWidth * 2 - 1;\n            mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n            if (isDrawing) {\n                raycaster.setFromCamera(mouse, camera);\n                const intersection = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3();\n                raycaster.ray.intersectPlane(drawingPlane, intersection);\n                wallEnd = intersection;\n                updateTempWall();\n            }\n        }\n        function onMouseUp(event) {\n            if (isDrawing) {\n                isDrawing = false;\n                // Only create a wall if it has some length\n                if (wallStart.distanceTo(wallEnd) > 0.2) {\n                    createWall(wallStart, wallEnd);\n                    // Remove temporary wall\n                    if (currentWallMesh) {\n                        scene.remove(currentWallMesh);\n                        currentWallMesh = null;\n                    }\n                }\n            }\n        }\n        // Handle window resize\n        function onWindowResize() {\n            camera.aspect = window.innerWidth / window.innerHeight;\n            camera.updateProjectionMatrix();\n            renderer.setSize(window.innerWidth, window.innerHeight);\n        }\n        // Allow dropping a ball with a touch on mobile\n        function onTouchStart(event) {\n            // Initialize audio on first interaction\n            if (!audioContext) {\n                initAudio();\n            }\n            event.preventDefault();\n            const touch = event.touches[0];\n            mouse.x = touch.clientX / window.innerWidth * 2 - 1;\n            mouse.y = -(touch.clientY / window.innerHeight) * 2 + 1;\n            raycaster.setFromCamera(mouse, camera);\n            const intersection = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3();\n            raycaster.ray.intersectPlane(drawingPlane, intersection);\n            const ball = createBall(intersection);\n            balls.push(ball);\n        }\n        // Toggle sound\n        function toggleSound() {\n            soundEnabled = !soundEnabled;\n            const soundToggle = document.getElementById(\"sound-toggle\");\n            if (soundToggle) {\n                soundToggle.textContent = soundEnabled ? \"\\uD83D\\uDD0A\" : \"\\uD83D\\uDD07\";\n                soundToggle.setAttribute(\"aria-label\", soundEnabled ? \"Sound On\" : \"Sound Off\");\n            }\n            // Initialize audio if not already done\n            if (soundEnabled && !audioContext) {\n                initAudio();\n            }\n        }\n        // Animation loop\n        const timeStep = 1 / 60;\n        function animate() {\n            requestAnimationFrame(animate);\n            // Update physics\n            world.step(timeStep);\n            // Update visual objects to match physics\n            for(let i = 0; i < balls.length; i++){\n                balls[i].mesh.position.copy(balls[i].body.position);\n                balls[i].mesh.quaternion.copy(balls[i].body.quaternion);\n                // Remove balls that fall too far\n                if (balls[i].body.position.y < -10) {\n                    scene.remove(balls[i].mesh);\n                    world.removeBody(balls[i].body);\n                    balls.splice(i, 1);\n                    i--;\n                }\n            }\n            renderer.render(scene, camera);\n        }\n        // Setup the scene\n        initScene();\n        initPhysics();\n        // Add event listeners\n        window.addEventListener(\"mousedown\", onMouseDown);\n        window.addEventListener(\"mousemove\", onMouseMove);\n        window.addEventListener(\"mouseup\", onMouseUp);\n        window.addEventListener(\"resize\", onWindowResize);\n        window.addEventListener(\"touchstart\", onTouchStart);\n        // Setup sound toggle\n        const soundToggle = document.getElementById(\"sound-toggle\");\n        if (soundToggle) {\n            soundToggle.addEventListener(\"click\", toggleSound);\n        }\n        // Start animation loop\n        animate();\n        // Cleanup function\n        return ()=>{\n            // Remove event listeners\n            window.removeEventListener(\"mousedown\", onMouseDown);\n            window.removeEventListener(\"mousemove\", onMouseMove);\n            window.removeEventListener(\"mouseup\", onMouseUp);\n            window.removeEventListener(\"resize\", onWindowResize);\n            window.removeEventListener(\"touchstart\", onTouchStart);\n            // Remove sound toggle listener\n            const soundToggle = document.getElementById(\"sound-toggle\");\n            if (soundToggle) {\n                soundToggle.removeEventListener(\"click\", toggleSound);\n            }\n            // Stop animation frame\n            cancelAnimationFrame(animate);\n            // Dispose renderer\n            if (renderer) {\n                renderer.dispose();\n            }\n            // Remove canvas from DOM\n            if (mountRef.current && renderer && renderer.domElement) {\n                mountRef.current.removeChild(renderer.domElement);\n            }\n        };\n    }, []);\n    // Function to update platform bounciness\n    const handleBouncinessChange = (event)=>{\n        const newRestitution = parseFloat(event.target.value);\n        if (ballPlatformContactMaterial) {\n            ballPlatformContactMaterial.restitution = newRestitution;\n        }\n        // Update display value\n        const display = document.getElementById(\"bounciness-value\");\n        if (display) {\n            display.textContent = newRestitution.toFixed(2);\n        }\n    // Optional: Play a subtle tone here\n    // e.g., playTickSound(newRestitution);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"scene-container\",\n        ref: mountRef,\n        style: {\n            width: \"100%\",\n            height: \"100vh\"\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                id: \"instructions\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                        children: \"Bounce Controls\"\n                    }, void 0, false, {\n                        fileName: \"/Users/arcades/Code/Bounce-webvr/components/BounceScene.js\",\n                        lineNumber: 438,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: \"Click to drop balls\"\n                    }, void 0, false, {\n                        fileName: \"/Users/arcades/Code/Bounce-webvr/components/BounceScene.js\",\n                        lineNumber: 439,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: \"Shift + Click + Drag to create walls\"\n                    }, void 0, false, {\n                        fileName: \"/Users/arcades/Code/Bounce-webvr/components/BounceScene.js\",\n                        lineNumber: 440,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"slider-container\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                htmlFor: \"bounciness-slider\",\n                                children: \"Platform Bounciness:\"\n                            }, void 0, false, {\n                                fileName: \"/Users/arcades/Code/Bounce-webvr/components/BounceScene.js\",\n                                lineNumber: 442,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                type: \"range\",\n                                id: \"bounciness-slider\",\n                                name: \"bounciness\",\n                                min: \"0.1\",\n                                max: \"2.0\",\n                                step: \"0.1\",\n                                defaultValue: platformMaterial.restitution,\n                                onChange: handleBouncinessChange,\n                                \"aria-label\": \"Adjust Platform Bounciness\"\n                            }, void 0, false, {\n                                fileName: \"/Users/arcades/Code/Bounce-webvr/components/BounceScene.js\",\n                                lineNumber: 443,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                id: \"bounciness-value\",\n                                children: platformMaterial.restitution.toFixed(2)\n                            }, void 0, false, {\n                                fileName: \"/Users/arcades/Code/Bounce-webvr/components/BounceScene.js\",\n                                lineNumber: 454,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/arcades/Code/Bounce-webvr/components/BounceScene.js\",\n                        lineNumber: 441,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/arcades/Code/Bounce-webvr/components/BounceScene.js\",\n                lineNumber: 437,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                id: \"sound-toggle\",\n                \"aria-label\": \"Toggle sound\",\n                children: \"\\uD83D\\uDD0A\"\n            }, void 0, false, {\n                fileName: \"/Users/arcades/Code/Bounce-webvr/components/BounceScene.js\",\n                lineNumber: 457,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/arcades/Code/Bounce-webvr/components/BounceScene.js\",\n        lineNumber: 436,\n        columnNumber: 5\n    }, this);\n}\n// Add some basic styling for the slider\n// Ideally, this would go in a separate CSS file\nconst styles = `\n.slider-container {\n  margin-top: 10px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n#bounciness-slider {\n  width: 150px;\n}\n\n#bounciness-value {\n  min-width: 30px; /* Prevent layout shift */\n  text-align: right;\n}\n\n/* You might need styles for #instructions, #sound-toggle etc. */\n#instructions {\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  background: rgba(0, 0, 0, 0.7);\n  color: white;\n  padding: 10px;\n  border-radius: 5px;\n  z-index: 10;\n}\n\n#sound-toggle {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 1.5em;\n  background: none;\n  border: none;\n  cursor: pointer;\n  z-index: 10;\n}\n`;\n// Inject styles into the head - simple way for this example\nif (false) {}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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OzBDQUNuQyw4REFBQ0M7Z0NBQ0MzSyxNQUFLO2dDQUNMc0ssSUFBRztnQ0FDSE0sTUFBSztnQ0FDTDVGLEtBQUk7Z0NBQ0o2RixLQUFJO2dDQUNKM0IsTUFBSztnQ0FDTDRCLGNBQWMxTSxpQkFBaUJELFdBQVc7Z0NBQzFDNE0sVUFBVXBCO2dDQUNWcUIsY0FBVzs7Ozs7OzBDQUViLDhEQUFDQztnQ0FBS1gsSUFBRzswQ0FBb0JsTSxpQkFBaUJELFdBQVcsQ0FBQzhMLE9BQU8sQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBCQUd0RSw4REFBQ2lCO2dCQUFPWixJQUFHO2dCQUFlVSxjQUFXOzBCQUFlOzs7Ozs7Ozs7Ozs7QUFHMUQ7QUFFQSx3Q0FBd0M7QUFDeEMsZ0RBQWdEO0FBQ2hELE1BQU1HLFNBQVMsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBdUNoQixDQUFDO0FBRUQsNERBQTREO0FBQzVELElBQUksS0FBa0IsRUFBYSxFQUtsQyIsInNvdXJjZXMiOlsid2VicGFjazovL2JvdW5jZS13ZWJ2ci8uL2NvbXBvbmVudHMvQm91bmNlU2NlbmUuanM/OGVkNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVJlZiB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCAqIGFzIFRIUkVFIGZyb20gJ3RocmVlJztcbmltcG9ydCAqIGFzIENBTk5PTiBmcm9tICdjYW5ub24tZXMnO1xuXG4vLyBEZWZpbmUgcGh5c2ljcyBtYXRlcmlhbHNcbmNvbnN0IGJhbGxNYXRlcmlhbCA9IG5ldyBDQU5OT04uTWF0ZXJpYWwoXCJiYWxsTWF0ZXJpYWxcIik7XG5iYWxsTWF0ZXJpYWwuZnJpY3Rpb24gPSAwLjM7XG5iYWxsTWF0ZXJpYWwucmVzdGl0dXRpb24gPSAwLjc7IC8vIERlZmF1bHQgYmFsbCByZXN0aXR1dGlvblxuXG5jb25zdCBwbGF0Zm9ybU1hdGVyaWFsID0gbmV3IENBTk5PTi5NYXRlcmlhbChcInBsYXRmb3JtTWF0ZXJpYWxcIik7XG5wbGF0Zm9ybU1hdGVyaWFsLmZyaWN0aW9uID0gMC4xOyAvLyBMb3cgZnJpY3Rpb24gZm9yIHBsYXRmb3Jtc1xucGxhdGZvcm1NYXRlcmlhbC5yZXN0aXR1dGlvbiA9IDAuNTsgLy8gRGVmYXVsdCBwbGF0Zm9ybSByZXN0aXR1dGlvbiAod2lsbCBiZSBjb250cm9sbGVkIGJ5IHNsaWRlcilcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQm91bmNlU2NlbmUoKSB7XG4gIGNvbnN0IG1vdW50UmVmID0gdXNlUmVmKG51bGwpO1xuICBcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcpIHJldHVybjtcbiAgICBcbiAgICAvLyBTY2VuZSB2YXJpYWJsZXNcbiAgICBsZXQgc2NlbmUsIGNhbWVyYSwgcmVuZGVyZXI7XG4gICAgbGV0IHdvcmxkO1xuICAgIGxldCBiYWxscyA9IFtdO1xuICAgIGxldCB3YWxscyA9IFtdO1xuICAgIGxldCB3YWxsQm9kaWVzID0gW107XG4gICAgbGV0IGlzRHJhd2luZyA9IGZhbHNlO1xuICAgIGxldCB3YWxsU3RhcnQgPSBuZXcgVEhSRUUuVmVjdG9yMygpO1xuICAgIGxldCB3YWxsRW5kID0gbmV3IFRIUkVFLlZlY3RvcjMoKTtcbiAgICBsZXQgY3VycmVudFdhbGxNZXNoID0gbnVsbDtcbiAgICBsZXQgYXVkaW9Db250ZXh0O1xuICAgIGxldCBzb3VuZEVuYWJsZWQgPSB0cnVlO1xuICAgIC8vIEtlZXAgdHJhY2sgb2YgdGhlIHNoYXJlZCBwbGF0Zm9ybSBtYXRlcmlhbCBjb250YWN0IHByb3BlcnRpZXNcbiAgICBsZXQgYmFsbFBsYXRmb3JtQ29udGFjdE1hdGVyaWFsO1xuICAgIFxuICAgIC8vIEF1ZGlvIGNvbnRleHQgZm9yIHNvdW5kIGVmZmVjdHNcbiAgICBmdW5jdGlvbiBpbml0QXVkaW8oKSB7XG4gICAgICBhdWRpb0NvbnRleHQgPSBuZXcgKHdpbmRvdy5BdWRpb0NvbnRleHQgfHwgd2luZG93LndlYmtpdEF1ZGlvQ29udGV4dCkoKTtcbiAgICAgIFxuICAgICAgLy8gQ3JlYXRlIHN1Y2Nlc3Mgc291bmQgZnVuY3Rpb25cbiAgICAgIHdpbmRvdy5wbGF5Qm91bmNlU291bmQgPSAoaW50ZW5zaXR5ID0gMS4wKSA9PiB7XG4gICAgICAgIGlmICghc291bmRFbmFibGVkIHx8ICFhdWRpb0NvbnRleHQpIHJldHVybjtcbiAgICAgICAgXG4gICAgICAgIGNvbnN0IG9zY2lsbGF0b3IgPSBhdWRpb0NvbnRleHQuY3JlYXRlT3NjaWxsYXRvcigpO1xuICAgICAgICBjb25zdCBnYWluTm9kZSA9IGF1ZGlvQ29udGV4dC5jcmVhdGVHYWluKCk7XG4gICAgICAgIFxuICAgICAgICBvc2NpbGxhdG9yLnR5cGUgPSAnc2luZSc7XG4gICAgICAgIG9zY2lsbGF0b3IuZnJlcXVlbmN5LnNldFZhbHVlQXRUaW1lKDMwMCArIGludGVuc2l0eSAqIDIwMCwgYXVkaW9Db250ZXh0LmN1cnJlbnRUaW1lKTtcbiAgICAgICAgb3NjaWxsYXRvci5mcmVxdWVuY3kuZXhwb25lbnRpYWxSYW1wVG9WYWx1ZUF0VGltZSgyMDAsIGF1ZGlvQ29udGV4dC5jdXJyZW50VGltZSArIDAuMSk7XG4gICAgICAgIFxuICAgICAgICBnYWluTm9kZS5nYWluLnNldFZhbHVlQXRUaW1lKGludGVuc2l0eSAqIDAuMywgYXVkaW9Db250ZXh0LmN1cnJlbnRUaW1lKTtcbiAgICAgICAgZ2Fpbk5vZGUuZ2Fpbi5leHBvbmVudGlhbFJhbXBUb1ZhbHVlQXRUaW1lKDAuMDAxLCBhdWRpb0NvbnRleHQuY3VycmVudFRpbWUgKyAwLjIpO1xuICAgICAgICBcbiAgICAgICAgb3NjaWxsYXRvci5jb25uZWN0KGdhaW5Ob2RlKTtcbiAgICAgICAgZ2Fpbk5vZGUuY29ubmVjdChhdWRpb0NvbnRleHQuZGVzdGluYXRpb24pO1xuICAgICAgICBcbiAgICAgICAgb3NjaWxsYXRvci5zdGFydCgpO1xuICAgICAgICBvc2NpbGxhdG9yLnN0b3AoYXVkaW9Db250ZXh0LmN1cnJlbnRUaW1lICsgMC4yKTtcbiAgICAgIH07XG4gICAgfVxuICAgIFxuICAgIC8vIEluaXRpYWxpemUgVGhyZWUuanMgc2NlbmVcbiAgICBmdW5jdGlvbiBpbml0U2NlbmUoKSB7XG4gICAgICAvLyBTY2VuZSBzZXR1cFxuICAgICAgc2NlbmUgPSBuZXcgVEhSRUUuU2NlbmUoKTtcbiAgICAgIHNjZW5lLmJhY2tncm91bmQgPSBuZXcgVEhSRUUuQ29sb3IoMHgwMDAwMDApOyAvLyBCbGFjayBiYWNrZ3JvdW5kXG4gICAgICBcbiAgICAgIC8vIENhbWVyYSBzZXR1cFxuICAgICAgY2FtZXJhID0gbmV3IFRIUkVFLlBlcnNwZWN0aXZlQ2FtZXJhKDc1LCB3aW5kb3cuaW5uZXJXaWR0aCAvIHdpbmRvdy5pbm5lckhlaWdodCwgMC4xLCAxMDAwKTtcbiAgICAgIGNhbWVyYS5wb3NpdGlvbi56ID0gNTtcbiAgICAgIFxuICAgICAgLy8gUmVuZGVyZXIgc2V0dXBcbiAgICAgIHJlbmRlcmVyID0gbmV3IFRIUkVFLldlYkdMUmVuZGVyZXIoeyBhbnRpYWxpYXM6IHRydWUgfSk7XG4gICAgICByZW5kZXJlci5zZXRTaXplKHdpbmRvdy5pbm5lcldpZHRoLCB3aW5kb3cuaW5uZXJIZWlnaHQpO1xuICAgICAgcmVuZGVyZXIuc2hhZG93TWFwLmVuYWJsZWQgPSB0cnVlO1xuICAgICAgbW91bnRSZWYuY3VycmVudC5hcHBlbmRDaGlsZChyZW5kZXJlci5kb21FbGVtZW50KTtcbiAgICAgIFxuICAgICAgLy8gTGlnaHRpbmdcbiAgICAgIGNvbnN0IGFtYmllbnRMaWdodCA9IG5ldyBUSFJFRS5BbWJpZW50TGlnaHQoMHhmZmZmZmYsIDAuNSk7XG4gICAgICBzY2VuZS5hZGQoYW1iaWVudExpZ2h0KTtcbiAgICAgIFxuICAgICAgY29uc3QgZGlyZWN0aW9uYWxMaWdodCA9IG5ldyBUSFJFRS5EaXJlY3Rpb25hbExpZ2h0KDB4ZmZmZmZmLCAwLjgpO1xuICAgICAgZGlyZWN0aW9uYWxMaWdodC5wb3NpdGlvbi5zZXQoMTAsIDIwLCAxNSk7XG4gICAgICBkaXJlY3Rpb25hbExpZ2h0LmNhc3RTaGFkb3cgPSB0cnVlO1xuICAgICAgZGlyZWN0aW9uYWxMaWdodC5zaGFkb3cubWFwU2l6ZS53aWR0aCA9IDIwNDg7XG4gICAgICBkaXJlY3Rpb25hbExpZ2h0LnNoYWRvdy5tYXBTaXplLmhlaWdodCA9IDIwNDg7XG4gICAgICBzY2VuZS5hZGQoZGlyZWN0aW9uYWxMaWdodCk7XG4gICAgfVxuICAgIFxuICAgIC8vIEluaXRpYWxpemUgcGh5c2ljcyB3b3JsZFxuICAgIGZ1bmN0aW9uIGluaXRQaHlzaWNzKCkge1xuICAgICAgd29ybGQgPSBuZXcgQ0FOTk9OLldvcmxkKHtcbiAgICAgICAgZ3Jhdml0eTogbmV3IENBTk5PTi5WZWMzKDAsIC05LjgyLCAwKVxuICAgICAgfSk7XG4gICAgICBcbiAgICAgIC8vIEFkZCBjb250YWN0IG1hdGVyaWFsIGJldHdlZW4gYmFsbHMgYW5kIHBsYXRmb3Jtc1xuICAgICAgYmFsbFBsYXRmb3JtQ29udGFjdE1hdGVyaWFsID0gbmV3IENBTk5PTi5Db250YWN0TWF0ZXJpYWwoXG4gICAgICAgIGJhbGxNYXRlcmlhbCxcbiAgICAgICAgcGxhdGZvcm1NYXRlcmlhbCxcbiAgICAgICAge1xuICAgICAgICAgIGZyaWN0aW9uOiAwLjAsIC8vIExvdyBmcmljdGlvbiBiZXR3ZWVuIGJhbGwgYW5kIHBsYXRmb3JtXG4gICAgICAgICAgcmVzdGl0dXRpb246IHBsYXRmb3JtTWF0ZXJpYWwucmVzdGl0dXRpb24sIC8vIFVzZSB0aGUgcGxhdGZvcm0ncyByZXN0aXR1dGlvblxuICAgICAgICB9XG4gICAgICApO1xuICAgICAgd29ybGQuYWRkQ29udGFjdE1hdGVyaWFsKGJhbGxQbGF0Zm9ybUNvbnRhY3RNYXRlcmlhbCk7XG4gICAgICBcbiAgICAgIC8vIEdyb3VuZCBwbGFuZSAtIGludmlzaWJsZSBwaHlzaWNzIHBsYW5lXG4gICAgICBjb25zdCBncm91bmRCb2R5ID0gbmV3IENBTk5PTi5Cb2R5KHtcbiAgICAgICAgdHlwZTogQ0FOTk9OLkJvZHkuU1RBVElDLFxuICAgICAgICBzaGFwZTogbmV3IENBTk5PTi5QbGFuZSgpLFxuICAgICAgICBtYXRlcmlhbDogcGxhdGZvcm1NYXRlcmlhbCAvLyBBc3NpZ24gcGxhdGZvcm0gbWF0ZXJpYWxcbiAgICAgIH0pO1xuICAgICAgZ3JvdW5kQm9keS5xdWF0ZXJuaW9uLnNldEZyb21BeGlzQW5nbGUobmV3IENBTk5PTi5WZWMzKDEsIDAsIDApLCAtTWF0aC5QSSAvIDIpO1xuICAgICAgZ3JvdW5kQm9keS5wb3NpdGlvbi55ID0gLTI7XG4gICAgICB3b3JsZC5hZGRCb2R5KGdyb3VuZEJvZHkpO1xuICAgICAgXG4gICAgICAvLyBWaXNpYmxlIGdyb3VuZCBwbGFuZVxuICAgICAgY29uc3QgZ3JvdW5kR2VvbWV0cnkgPSBuZXcgVEhSRUUuUGxhbmVHZW9tZXRyeSgxMCwgMTApO1xuICAgICAgY29uc3QgZ3JvdW5kTWF0ZXJpYWwgPSBuZXcgVEhSRUUuTWVzaFN0YW5kYXJkTWF0ZXJpYWwoeyBcbiAgICAgICAgY29sb3I6IDB4MjI4QjIyLFxuICAgICAgICByb3VnaG5lc3M6IDAuNyxcbiAgICAgICAgbWV0YWxuZXNzOiAwLjFcbiAgICAgIH0pO1xuICAgICAgY29uc3QgZ3JvdW5kID0gbmV3IFRIUkVFLk1lc2goZ3JvdW5kR2VvbWV0cnksIGdyb3VuZE1hdGVyaWFsKTtcbiAgICAgIGdyb3VuZC5yb3RhdGlvbi54ID0gLU1hdGguUEkgLyAyO1xuICAgICAgZ3JvdW5kLnBvc2l0aW9uLnkgPSAtMjtcbiAgICAgIGdyb3VuZC5yZWNlaXZlU2hhZG93ID0gdHJ1ZTtcbiAgICAgIHNjZW5lLmFkZChncm91bmQpO1xuICAgIH1cbiAgICBcbiAgICAvLyBDcmVhdGUgYSBiYWxsIGF0IHRoZSBzcGVjaWZpZWQgcG9zaXRpb25cbiAgICBmdW5jdGlvbiBjcmVhdGVCYWxsKHBvc2l0aW9uKSB7XG4gICAgICBjb25zdCByYWRpdXMgPSAwLjI7XG4gICAgICBcbiAgICAgIC8vIFBoeXNpY2FsIGJvZHlcbiAgICAgIGNvbnN0IGJhbGxCb2R5ID0gbmV3IENBTk5PTi5Cb2R5KHtcbiAgICAgICAgbWFzczogMSxcbiAgICAgICAgc2hhcGU6IG5ldyBDQU5OT04uU3BoZXJlKHJhZGl1cyksXG4gICAgICAgIHBvc2l0aW9uOiBuZXcgQ0FOTk9OLlZlYzMocG9zaXRpb24ueCwgcG9zaXRpb24ueSwgcG9zaXRpb24ueiksXG4gICAgICAgIGxpbmVhckRhbXBpbmc6IDAuMSxcbiAgICAgICAgbWF0ZXJpYWw6IGJhbGxNYXRlcmlhbCAvLyBBc3NpZ24gYmFsbCBtYXRlcmlhbFxuICAgICAgfSk7XG4gICAgICBcbiAgICAgIHdvcmxkLmFkZEJvZHkoYmFsbEJvZHkpO1xuICAgICAgXG4gICAgICAvLyBMaXN0ZW4gZm9yIGNvbGxpc2lvbiBldmVudHMgdG8gcGxheSBzb3VuZHNcbiAgICAgIGJhbGxCb2R5LmFkZEV2ZW50TGlzdGVuZXIoJ2NvbGxpZGUnLCAoZXZlbnQpID0+IHtcbiAgICAgICAgY29uc3QgcmVsYXRpdmVWZWxvY2l0eSA9IGV2ZW50LmNvbnRhY3QuZ2V0SW1wYWN0VmVsb2NpdHlBbG9uZ05vcm1hbCgpO1xuICAgICAgICBpZiAod2luZG93LnBsYXlCb3VuY2VTb3VuZCAmJiBNYXRoLmFicyhyZWxhdGl2ZVZlbG9jaXR5KSA+IDAuNSkge1xuICAgICAgICAgIGNvbnN0IGludGVuc2l0eSA9IE1hdGgubWluKE1hdGguYWJzKHJlbGF0aXZlVmVsb2NpdHkpIC8gMTAsIDEpO1xuICAgICAgICAgIHdpbmRvdy5wbGF5Qm91bmNlU291bmQoaW50ZW5zaXR5KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICBcbiAgICAgIC8vIFZpc3VhbCBiYWxsXG4gICAgICBjb25zdCBiYWxsR2VvbWV0cnkgPSBuZXcgVEhSRUUuU3BoZXJlR2VvbWV0cnkocmFkaXVzLCAzMiwgMzIpO1xuICAgICAgY29uc3QgYmFsbE1hdGVyaWFsID0gbmV3IFRIUkVFLk1lc2hTdGFuZGFyZE1hdGVyaWFsKHsgXG4gICAgICAgIGNvbG9yOiBNYXRoLnJhbmRvbSgpICogMHhmZmZmZmYsXG4gICAgICAgIHJvdWdobmVzczogMC40LFxuICAgICAgICBtZXRhbG5lc3M6IDAuM1xuICAgICAgfSk7XG4gICAgICBjb25zdCBiYWxsTWVzaCA9IG5ldyBUSFJFRS5NZXNoKGJhbGxHZW9tZXRyeSwgYmFsbE1hdGVyaWFsKTtcbiAgICAgIGJhbGxNZXNoLmNhc3RTaGFkb3cgPSB0cnVlO1xuICAgICAgYmFsbE1lc2gucmVjZWl2ZVNoYWRvdyA9IHRydWU7XG4gICAgICBzY2VuZS5hZGQoYmFsbE1lc2gpO1xuICAgICAgXG4gICAgICByZXR1cm4geyBib2R5OiBiYWxsQm9keSwgbWVzaDogYmFsbE1lc2ggfTtcbiAgICB9XG4gICAgXG4gICAgLy8gQ3JlYXRlIGEgd2FsbCBiZXR3ZWVuIHR3byBwb2ludHNcbiAgICBmdW5jdGlvbiBjcmVhdGVXYWxsKHN0YXJ0LCBlbmQpIHtcbiAgICAgIC8vIENhbGN1bGF0ZSB3YWxsIHByb3BlcnRpZXNcbiAgICAgIGNvbnN0IGRpcmVjdGlvbiA9IG5ldyBUSFJFRS5WZWN0b3IzKCkuc3ViVmVjdG9ycyhlbmQsIHN0YXJ0KTtcbiAgICAgIGNvbnN0IGxlbmd0aCA9IGRpcmVjdGlvbi5sZW5ndGgoKTtcbiAgICAgIGNvbnN0IGNlbnRlciA9IG5ldyBUSFJFRS5WZWN0b3IzKCkuYWRkVmVjdG9ycyhzdGFydCwgZW5kKS5tdWx0aXBseVNjYWxhcigwLjUpO1xuICAgICAgXG4gICAgICAvLyBDYWxjdWxhdGUgcm90YXRpb24gdG8gYWxpZ24gd2l0aCBkaXJlY3Rpb25cbiAgICAgIGNvbnN0IHdhbGxEaXJlY3Rpb24gPSBkaXJlY3Rpb24uY2xvbmUoKS5ub3JtYWxpemUoKTtcbiAgICAgIGNvbnN0IGFuZ2xlID0gTWF0aC5hdGFuMih3YWxsRGlyZWN0aW9uLngsIHdhbGxEaXJlY3Rpb24ueSk7XG4gICAgICBcbiAgICAgIC8vIENyZWF0ZSBwaHlzaWNhbCB3YWxsXG4gICAgICBjb25zdCB3YWxsU2hhcGUgPSBuZXcgQ0FOTk9OLkJveChuZXcgQ0FOTk9OLlZlYzMobGVuZ3RoLzIsIDAuMSwgMC4xKSk7XG4gICAgICBjb25zdCB3YWxsQm9keSA9IG5ldyBDQU5OT04uQm9keSh7XG4gICAgICAgIG1hc3M6IDAsIC8vIFN0YXRpYyBib2R5XG4gICAgICAgIHBvc2l0aW9uOiBuZXcgQ0FOTk9OLlZlYzMoY2VudGVyLngsIGNlbnRlci55LCBjZW50ZXIueiksXG4gICAgICAgIHNoYXBlOiB3YWxsU2hhcGUsXG4gICAgICAgIG1hdGVyaWFsOiBwbGF0Zm9ybU1hdGVyaWFsIC8vIEFzc2lnbiBwbGF0Zm9ybSBtYXRlcmlhbFxuICAgICAgfSk7XG4gICAgICBcbiAgICAgIC8vIFJvdGF0ZSB0byBtYXRjaCB2aXN1YWwgcmVwcmVzZW50YXRpb25cbiAgICAgIHdhbGxCb2R5LnF1YXRlcm5pb24uc2V0RnJvbUF4aXNBbmdsZShuZXcgQ0FOTk9OLlZlYzMoMCwgMCwgMSksIC1hbmdsZSk7XG4gICAgICB3b3JsZC5hZGRCb2R5KHdhbGxCb2R5KTtcbiAgICAgIHdhbGxCb2RpZXMucHVzaCh3YWxsQm9keSk7XG4gICAgICBcbiAgICAgIC8vIENyZWF0ZSB2aXN1YWwgd2FsbFxuICAgICAgY29uc3Qgd2FsbEdlb21ldHJ5ID0gbmV3IFRIUkVFLkJveEdlb21ldHJ5KGxlbmd0aCwgMC4yLCAwLjIpO1xuICAgICAgY29uc3Qgd2FsbE1hdGVyaWFsID0gbmV3IFRIUkVFLk1lc2hTdGFuZGFyZE1hdGVyaWFsKHsgXG4gICAgICAgIGNvbG9yOiAweDhCNDUxMyxcbiAgICAgICAgcm91Z2huZXNzOiAwLjgsXG4gICAgICAgIG1ldGFsbmVzczogMC4yXG4gICAgICB9KTtcbiAgICAgIGNvbnN0IHdhbGxNZXNoID0gbmV3IFRIUkVFLk1lc2god2FsbEdlb21ldHJ5LCB3YWxsTWF0ZXJpYWwpO1xuICAgICAgd2FsbE1lc2gucG9zaXRpb24uY29weShjZW50ZXIpO1xuICAgICAgd2FsbE1lc2gucm90YXRpb24ueiA9IC1hbmdsZTtcbiAgICAgIHdhbGxNZXNoLmNhc3RTaGFkb3cgPSB0cnVlO1xuICAgICAgd2FsbE1lc2gucmVjZWl2ZVNoYWRvdyA9IHRydWU7XG4gICAgICBzY2VuZS5hZGQod2FsbE1lc2gpO1xuICAgICAgd2FsbHMucHVzaCh3YWxsTWVzaCk7XG4gICAgICBcbiAgICAgIHJldHVybiB7IGJvZHk6IHdhbGxCb2R5LCBtZXNoOiB3YWxsTWVzaCB9O1xuICAgIH1cbiAgICBcbiAgICAvLyBVcGRhdGUgdGVtcG9yYXJ5IHdhbGwgd2hpbGUgZHJhd2luZ1xuICAgIGZ1bmN0aW9uIHVwZGF0ZVRlbXBXYWxsKCkge1xuICAgICAgaWYgKGN1cnJlbnRXYWxsTWVzaCkge1xuICAgICAgICBzY2VuZS5yZW1vdmUoY3VycmVudFdhbGxNZXNoKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgY29uc3QgZGlyZWN0aW9uID0gbmV3IFRIUkVFLlZlY3RvcjMoKS5zdWJWZWN0b3JzKHdhbGxFbmQsIHdhbGxTdGFydCk7XG4gICAgICBjb25zdCBsZW5ndGggPSBkaXJlY3Rpb24ubGVuZ3RoKCk7XG4gICAgICBjb25zdCBjZW50ZXIgPSBuZXcgVEhSRUUuVmVjdG9yMygpLmFkZFZlY3RvcnMod2FsbFN0YXJ0LCB3YWxsRW5kKS5tdWx0aXBseVNjYWxhcigwLjUpO1xuICAgICAgXG4gICAgICBjb25zdCB3YWxsRGlyZWN0aW9uID0gZGlyZWN0aW9uLmNsb25lKCkubm9ybWFsaXplKCk7XG4gICAgICBjb25zdCBhbmdsZSA9IE1hdGguYXRhbjIod2FsbERpcmVjdGlvbi54LCB3YWxsRGlyZWN0aW9uLnkpO1xuICAgICAgXG4gICAgICBjb25zdCB3YWxsR2VvbWV0cnkgPSBuZXcgVEhSRUUuQm94R2VvbWV0cnkobGVuZ3RoLCAwLjIsIDAuMik7XG4gICAgICBjb25zdCB3YWxsTWF0ZXJpYWwgPSBuZXcgVEhSRUUuTWVzaFN0YW5kYXJkTWF0ZXJpYWwoeyBcbiAgICAgICAgY29sb3I6IDB4QUREOEU2LFxuICAgICAgICB0cmFuc3BhcmVudDogdHJ1ZSxcbiAgICAgICAgb3BhY2l0eTogMC43LFxuICAgICAgICByb3VnaG5lc3M6IDAuOFxuICAgICAgfSk7XG4gICAgICBcbiAgICAgIGN1cnJlbnRXYWxsTWVzaCA9IG5ldyBUSFJFRS5NZXNoKHdhbGxHZW9tZXRyeSwgd2FsbE1hdGVyaWFsKTtcbiAgICAgIGN1cnJlbnRXYWxsTWVzaC5wb3NpdGlvbi5jb3B5KGNlbnRlcik7XG4gICAgICBjdXJyZW50V2FsbE1lc2gucm90YXRpb24ueiA9IC1hbmdsZTtcbiAgICAgIHNjZW5lLmFkZChjdXJyZW50V2FsbE1lc2gpO1xuICAgIH1cbiAgICBcbiAgICAvLyBSYXljYXN0ZXIgZm9yIG1vdXNlIGludGVyYWN0aW9uXG4gICAgY29uc3QgcmF5Y2FzdGVyID0gbmV3IFRIUkVFLlJheWNhc3RlcigpO1xuICAgIGNvbnN0IG1vdXNlID0gbmV3IFRIUkVFLlZlY3RvcjIoKTtcbiAgICBjb25zdCBkcmF3aW5nUGxhbmUgPSBuZXcgVEhSRUUuUGxhbmUobmV3IFRIUkVFLlZlY3RvcjMoMCwgMCwgMSksIDApO1xuICAgIFxuICAgIC8vIE1vdXNlIGV2ZW50IGhhbmRsZXJzXG4gICAgZnVuY3Rpb24gb25Nb3VzZURvd24oZXZlbnQpIHtcbiAgICAgIC8vIEdldCBtb3VzZSBwb3NpdGlvblxuICAgICAgbW91c2UueCA9IChldmVudC5jbGllbnRYIC8gd2luZG93LmlubmVyV2lkdGgpICogMiAtIDE7XG4gICAgICBtb3VzZS55ID0gLShldmVudC5jbGllbnRZIC8gd2luZG93LmlubmVySGVpZ2h0KSAqIDIgKyAxO1xuICAgICAgXG4gICAgICAvLyBJbml0aWFsaXplIGF1ZGlvIG9uIGZpcnN0IGludGVyYWN0aW9uXG4gICAgICBpZiAoIWF1ZGlvQ29udGV4dCkge1xuICAgICAgICBpbml0QXVkaW8oKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gQ2FzdCByYXkgZnJvbSBtb3VzZSBwb3NpdGlvbiBpbnRvIHNjZW5lXG4gICAgICByYXljYXN0ZXIuc2V0RnJvbUNhbWVyYShtb3VzZSwgY2FtZXJhKTtcbiAgICAgIFxuICAgICAgLy8gSWYgc2hpZnQgaXMgaGVsZCwgc3RhcnQgZHJhd2luZyBhIHdhbGxcbiAgICAgIGlmIChldmVudC5zaGlmdEtleSkge1xuICAgICAgICBpc0RyYXdpbmcgPSB0cnVlO1xuICAgICAgICBjb25zdCBpbnRlcnNlY3Rpb24gPSBuZXcgVEhSRUUuVmVjdG9yMygpO1xuICAgICAgICByYXljYXN0ZXIucmF5LmludGVyc2VjdFBsYW5lKGRyYXdpbmdQbGFuZSwgaW50ZXJzZWN0aW9uKTtcbiAgICAgICAgd2FsbFN0YXJ0ID0gaW50ZXJzZWN0aW9uLmNsb25lKCk7XG4gICAgICAgIHdhbGxFbmQgPSBpbnRlcnNlY3Rpb24uY2xvbmUoKTtcbiAgICAgICAgdXBkYXRlVGVtcFdhbGwoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIE90aGVyd2lzZSwgZHJvcCBhIGJhbGxcbiAgICAgICAgY29uc3QgaW50ZXJzZWN0aW9uID0gbmV3IFRIUkVFLlZlY3RvcjMoKTtcbiAgICAgICAgcmF5Y2FzdGVyLnJheS5pbnRlcnNlY3RQbGFuZShkcmF3aW5nUGxhbmUsIGludGVyc2VjdGlvbik7XG4gICAgICAgIGNvbnN0IGJhbGwgPSBjcmVhdGVCYWxsKGludGVyc2VjdGlvbik7XG4gICAgICAgIGJhbGxzLnB1c2goYmFsbCk7XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIGZ1bmN0aW9uIG9uTW91c2VNb3ZlKGV2ZW50KSB7XG4gICAgICBtb3VzZS54ID0gKGV2ZW50LmNsaWVudFggLyB3aW5kb3cuaW5uZXJXaWR0aCkgKiAyIC0gMTtcbiAgICAgIG1vdXNlLnkgPSAtKGV2ZW50LmNsaWVudFkgLyB3aW5kb3cuaW5uZXJIZWlnaHQpICogMiArIDE7XG4gICAgICBcbiAgICAgIGlmIChpc0RyYXdpbmcpIHtcbiAgICAgICAgcmF5Y2FzdGVyLnNldEZyb21DYW1lcmEobW91c2UsIGNhbWVyYSk7XG4gICAgICAgIGNvbnN0IGludGVyc2VjdGlvbiA9IG5ldyBUSFJFRS5WZWN0b3IzKCk7XG4gICAgICAgIHJheWNhc3Rlci5yYXkuaW50ZXJzZWN0UGxhbmUoZHJhd2luZ1BsYW5lLCBpbnRlcnNlY3Rpb24pO1xuICAgICAgICB3YWxsRW5kID0gaW50ZXJzZWN0aW9uO1xuICAgICAgICB1cGRhdGVUZW1wV2FsbCgpO1xuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICBmdW5jdGlvbiBvbk1vdXNlVXAoZXZlbnQpIHtcbiAgICAgIGlmIChpc0RyYXdpbmcpIHtcbiAgICAgICAgaXNEcmF3aW5nID0gZmFsc2U7XG4gICAgICAgIC8vIE9ubHkgY3JlYXRlIGEgd2FsbCBpZiBpdCBoYXMgc29tZSBsZW5ndGhcbiAgICAgICAgaWYgKHdhbGxTdGFydC5kaXN0YW5jZVRvKHdhbGxFbmQpID4gMC4yKSB7XG4gICAgICAgICAgY3JlYXRlV2FsbCh3YWxsU3RhcnQsIHdhbGxFbmQpO1xuICAgICAgICAgIFxuICAgICAgICAgIC8vIFJlbW92ZSB0ZW1wb3Jhcnkgd2FsbFxuICAgICAgICAgIGlmIChjdXJyZW50V2FsbE1lc2gpIHtcbiAgICAgICAgICAgIHNjZW5lLnJlbW92ZShjdXJyZW50V2FsbE1lc2gpO1xuICAgICAgICAgICAgY3VycmVudFdhbGxNZXNoID0gbnVsbDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLy8gSGFuZGxlIHdpbmRvdyByZXNpemVcbiAgICBmdW5jdGlvbiBvbldpbmRvd1Jlc2l6ZSgpIHtcbiAgICAgIGNhbWVyYS5hc3BlY3QgPSB3aW5kb3cuaW5uZXJXaWR0aCAvIHdpbmRvdy5pbm5lckhlaWdodDtcbiAgICAgIGNhbWVyYS51cGRhdGVQcm9qZWN0aW9uTWF0cml4KCk7XG4gICAgICByZW5kZXJlci5zZXRTaXplKHdpbmRvdy5pbm5lcldpZHRoLCB3aW5kb3cuaW5uZXJIZWlnaHQpO1xuICAgIH1cbiAgICBcbiAgICAvLyBBbGxvdyBkcm9wcGluZyBhIGJhbGwgd2l0aCBhIHRvdWNoIG9uIG1vYmlsZVxuICAgIGZ1bmN0aW9uIG9uVG91Y2hTdGFydChldmVudCkge1xuICAgICAgLy8gSW5pdGlhbGl6ZSBhdWRpbyBvbiBmaXJzdCBpbnRlcmFjdGlvblxuICAgICAgaWYgKCFhdWRpb0NvbnRleHQpIHtcbiAgICAgICAgaW5pdEF1ZGlvKCk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBjb25zdCB0b3VjaCA9IGV2ZW50LnRvdWNoZXNbMF07XG4gICAgICBtb3VzZS54ID0gKHRvdWNoLmNsaWVudFggLyB3aW5kb3cuaW5uZXJXaWR0aCkgKiAyIC0gMTtcbiAgICAgIG1vdXNlLnkgPSAtKHRvdWNoLmNsaWVudFkgLyB3aW5kb3cuaW5uZXJIZWlnaHQpICogMiArIDE7XG4gICAgICBcbiAgICAgIHJheWNhc3Rlci5zZXRGcm9tQ2FtZXJhKG1vdXNlLCBjYW1lcmEpO1xuICAgICAgY29uc3QgaW50ZXJzZWN0aW9uID0gbmV3IFRIUkVFLlZlY3RvcjMoKTtcbiAgICAgIHJheWNhc3Rlci5yYXkuaW50ZXJzZWN0UGxhbmUoZHJhd2luZ1BsYW5lLCBpbnRlcnNlY3Rpb24pO1xuICAgICAgY29uc3QgYmFsbCA9IGNyZWF0ZUJhbGwoaW50ZXJzZWN0aW9uKTtcbiAgICAgIGJhbGxzLnB1c2goYmFsbCk7XG4gICAgfVxuICAgIFxuICAgIC8vIFRvZ2dsZSBzb3VuZFxuICAgIGZ1bmN0aW9uIHRvZ2dsZVNvdW5kKCkge1xuICAgICAgc291bmRFbmFibGVkID0gIXNvdW5kRW5hYmxlZDtcbiAgICAgIGNvbnN0IHNvdW5kVG9nZ2xlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NvdW5kLXRvZ2dsZScpO1xuICAgICAgaWYgKHNvdW5kVG9nZ2xlKSB7XG4gICAgICAgIHNvdW5kVG9nZ2xlLnRleHRDb250ZW50ID0gc291bmRFbmFibGVkID8gJ/CflIonIDogJ/CflIcnO1xuICAgICAgICBzb3VuZFRvZ2dsZS5zZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnLCBzb3VuZEVuYWJsZWQgPyAnU291bmQgT24nIDogJ1NvdW5kIE9mZicpO1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBJbml0aWFsaXplIGF1ZGlvIGlmIG5vdCBhbHJlYWR5IGRvbmVcbiAgICAgIGlmIChzb3VuZEVuYWJsZWQgJiYgIWF1ZGlvQ29udGV4dCkge1xuICAgICAgICBpbml0QXVkaW8oKTtcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLy8gQW5pbWF0aW9uIGxvb3BcbiAgICBjb25zdCB0aW1lU3RlcCA9IDEgLyA2MDtcbiAgICBmdW5jdGlvbiBhbmltYXRlKCkge1xuICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGFuaW1hdGUpO1xuICAgICAgXG4gICAgICAvLyBVcGRhdGUgcGh5c2ljc1xuICAgICAgd29ybGQuc3RlcCh0aW1lU3RlcCk7XG4gICAgICBcbiAgICAgIC8vIFVwZGF0ZSB2aXN1YWwgb2JqZWN0cyB0byBtYXRjaCBwaHlzaWNzXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGJhbGxzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGJhbGxzW2ldLm1lc2gucG9zaXRpb24uY29weShiYWxsc1tpXS5ib2R5LnBvc2l0aW9uKTtcbiAgICAgICAgYmFsbHNbaV0ubWVzaC5xdWF0ZXJuaW9uLmNvcHkoYmFsbHNbaV0uYm9keS5xdWF0ZXJuaW9uKTtcbiAgICAgICAgXG4gICAgICAgIC8vIFJlbW92ZSBiYWxscyB0aGF0IGZhbGwgdG9vIGZhclxuICAgICAgICBpZiAoYmFsbHNbaV0uYm9keS5wb3NpdGlvbi55IDwgLTEwKSB7XG4gICAgICAgICAgc2NlbmUucmVtb3ZlKGJhbGxzW2ldLm1lc2gpO1xuICAgICAgICAgIHdvcmxkLnJlbW92ZUJvZHkoYmFsbHNbaV0uYm9keSk7XG4gICAgICAgICAgYmFsbHMuc3BsaWNlKGksIDEpO1xuICAgICAgICAgIGktLTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgXG4gICAgICByZW5kZXJlci5yZW5kZXIoc2NlbmUsIGNhbWVyYSk7XG4gICAgfVxuICAgIFxuICAgIC8vIFNldHVwIHRoZSBzY2VuZVxuICAgIGluaXRTY2VuZSgpO1xuICAgIGluaXRQaHlzaWNzKCk7XG4gICAgXG4gICAgLy8gQWRkIGV2ZW50IGxpc3RlbmVyc1xuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBvbk1vdXNlRG93bik7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIG9uTW91c2VNb3ZlKTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIG9uTW91c2VVcCk7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIG9uV2luZG93UmVzaXplKTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIG9uVG91Y2hTdGFydCk7XG4gICAgXG4gICAgLy8gU2V0dXAgc291bmQgdG9nZ2xlXG4gICAgY29uc3Qgc291bmRUb2dnbGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc291bmQtdG9nZ2xlJyk7XG4gICAgaWYgKHNvdW5kVG9nZ2xlKSB7XG4gICAgICBzb3VuZFRvZ2dsZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRvZ2dsZVNvdW5kKTtcbiAgICB9XG4gICAgXG4gICAgLy8gU3RhcnQgYW5pbWF0aW9uIGxvb3BcbiAgICBhbmltYXRlKCk7XG4gICAgXG4gICAgLy8gQ2xlYW51cCBmdW5jdGlvblxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAvLyBSZW1vdmUgZXZlbnQgbGlzdGVuZXJzXG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgb25Nb3VzZURvd24pO1xuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIG9uTW91c2VNb3ZlKTtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgb25Nb3VzZVVwKTtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCBvbldpbmRvd1Jlc2l6ZSk7XG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIG9uVG91Y2hTdGFydCk7XG4gICAgICBcbiAgICAgIC8vIFJlbW92ZSBzb3VuZCB0b2dnbGUgbGlzdGVuZXJcbiAgICAgIGNvbnN0IHNvdW5kVG9nZ2xlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NvdW5kLXRvZ2dsZScpO1xuICAgICAgaWYgKHNvdW5kVG9nZ2xlKSB7XG4gICAgICAgIHNvdW5kVG9nZ2xlLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdG9nZ2xlU291bmQpO1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBTdG9wIGFuaW1hdGlvbiBmcmFtZVxuICAgICAgY2FuY2VsQW5pbWF0aW9uRnJhbWUoYW5pbWF0ZSk7XG4gICAgICBcbiAgICAgIC8vIERpc3Bvc2UgcmVuZGVyZXJcbiAgICAgIGlmIChyZW5kZXJlcikge1xuICAgICAgICByZW5kZXJlci5kaXNwb3NlKCk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIFJlbW92ZSBjYW52YXMgZnJvbSBET01cbiAgICAgIGlmIChtb3VudFJlZi5jdXJyZW50ICYmIHJlbmRlcmVyICYmIHJlbmRlcmVyLmRvbUVsZW1lbnQpIHtcbiAgICAgICAgbW91bnRSZWYuY3VycmVudC5yZW1vdmVDaGlsZChyZW5kZXJlci5kb21FbGVtZW50KTtcbiAgICAgIH1cbiAgICB9O1xuICB9LCBbXSk7XG4gIFxuICAvLyBGdW5jdGlvbiB0byB1cGRhdGUgcGxhdGZvcm0gYm91bmNpbmVzc1xuICBjb25zdCBoYW5kbGVCb3VuY2luZXNzQ2hhbmdlID0gKGV2ZW50KSA9PiB7XG4gICAgY29uc3QgbmV3UmVzdGl0dXRpb24gPSBwYXJzZUZsb2F0KGV2ZW50LnRhcmdldC52YWx1ZSk7XG4gICAgaWYgKGJhbGxQbGF0Zm9ybUNvbnRhY3RNYXRlcmlhbCkge1xuICAgICAgYmFsbFBsYXRmb3JtQ29udGFjdE1hdGVyaWFsLnJlc3RpdHV0aW9uID0gbmV3UmVzdGl0dXRpb247XG4gICAgfVxuICAgIC8vIFVwZGF0ZSBkaXNwbGF5IHZhbHVlXG4gICAgY29uc3QgZGlzcGxheSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdib3VuY2luZXNzLXZhbHVlJyk7XG4gICAgaWYgKGRpc3BsYXkpIHtcbiAgICAgIGRpc3BsYXkudGV4dENvbnRlbnQgPSBuZXdSZXN0aXR1dGlvbi50b0ZpeGVkKDIpO1xuICAgIH1cbiAgICAvLyBPcHRpb25hbDogUGxheSBhIHN1YnRsZSB0b25lIGhlcmVcbiAgICAvLyBlLmcuLCBwbGF5VGlja1NvdW5kKG5ld1Jlc3RpdHV0aW9uKTtcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwic2NlbmUtY29udGFpbmVyXCIgcmVmPXttb3VudFJlZn0gc3R5bGU9e3sgd2lkdGg6ICcxMDAlJywgaGVpZ2h0OiAnMTAwdmgnIH19PlxuICAgICAgPGRpdiBpZD1cImluc3RydWN0aW9uc1wiPlxuICAgICAgICA8aDI+Qm91bmNlIENvbnRyb2xzPC9oMj5cbiAgICAgICAgPHA+Q2xpY2sgdG8gZHJvcCBiYWxsczwvcD5cbiAgICAgICAgPHA+U2hpZnQgKyBDbGljayArIERyYWcgdG8gY3JlYXRlIHdhbGxzPC9wPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNsaWRlci1jb250YWluZXJcIj5cbiAgICAgICAgICA8bGFiZWwgaHRtbEZvcj1cImJvdW5jaW5lc3Mtc2xpZGVyXCI+UGxhdGZvcm0gQm91bmNpbmVzczo8L2xhYmVsPlxuICAgICAgICAgIDxpbnB1dCBcbiAgICAgICAgICAgIHR5cGU9XCJyYW5nZVwiIFxuICAgICAgICAgICAgaWQ9XCJib3VuY2luZXNzLXNsaWRlclwiIFxuICAgICAgICAgICAgbmFtZT1cImJvdW5jaW5lc3NcIiBcbiAgICAgICAgICAgIG1pbj1cIjAuMVwiIFxuICAgICAgICAgICAgbWF4PVwiMi4wXCIgXG4gICAgICAgICAgICBzdGVwPVwiMC4xXCIgXG4gICAgICAgICAgICBkZWZhdWx0VmFsdWU9e3BsYXRmb3JtTWF0ZXJpYWwucmVzdGl0dXRpb259IC8vIFVzZSBpbml0aWFsIGRlZmF1bHRcbiAgICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVCb3VuY2luZXNzQ2hhbmdlfSBcbiAgICAgICAgICAgIGFyaWEtbGFiZWw9XCJBZGp1c3QgUGxhdGZvcm0gQm91bmNpbmVzc1wiXG4gICAgICAgICAgLz5cbiAgICAgICAgICA8c3BhbiBpZD1cImJvdW5jaW5lc3MtdmFsdWVcIj57cGxhdGZvcm1NYXRlcmlhbC5yZXN0aXR1dGlvbi50b0ZpeGVkKDIpfTwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxidXR0b24gaWQ9XCJzb3VuZC10b2dnbGVcIiBhcmlhLWxhYmVsPVwiVG9nZ2xlIHNvdW5kXCI+8J+UijwvYnV0dG9uPlxuICAgIDwvZGl2PlxuICApO1xufVxuXG4vLyBBZGQgc29tZSBiYXNpYyBzdHlsaW5nIGZvciB0aGUgc2xpZGVyXG4vLyBJZGVhbGx5LCB0aGlzIHdvdWxkIGdvIGluIGEgc2VwYXJhdGUgQ1NTIGZpbGVcbmNvbnN0IHN0eWxlcyA9IGBcbi5zbGlkZXItY29udGFpbmVyIHtcbiAgbWFyZ2luLXRvcDogMTBweDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZ2FwOiAxMHB4O1xufVxuXG4jYm91bmNpbmVzcy1zbGlkZXIge1xuICB3aWR0aDogMTUwcHg7XG59XG5cbiNib3VuY2luZXNzLXZhbHVlIHtcbiAgbWluLXdpZHRoOiAzMHB4OyAvKiBQcmV2ZW50IGxheW91dCBzaGlmdCAqL1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cblxuLyogWW91IG1pZ2h0IG5lZWQgc3R5bGVzIGZvciAjaW5zdHJ1Y3Rpb25zLCAjc291bmQtdG9nZ2xlIGV0Yy4gKi9cbiNpbnN0cnVjdGlvbnMge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMTBweDtcbiAgbGVmdDogMTBweDtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjcpO1xuICBjb2xvcjogd2hpdGU7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgei1pbmRleDogMTA7XG59XG5cbiNzb3VuZC10b2dnbGUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMTBweDtcbiAgcmlnaHQ6IDEwcHg7XG4gIGZvbnQtc2l6ZTogMS41ZW07XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGJvcmRlcjogbm9uZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB6LWluZGV4OiAxMDtcbn1cbmA7XG5cbi8vIEluamVjdCBzdHlsZXMgaW50byB0aGUgaGVhZCAtIHNpbXBsZSB3YXkgZm9yIHRoaXMgZXhhbXBsZVxuaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gIGNvbnN0IHN0eWxlU2hlZXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIHN0eWxlU2hlZXQudHlwZSA9IFwidGV4dC9jc3NcIjtcbiAgc3R5bGVTaGVldC5pbm5lclRleHQgPSBzdHlsZXM7XG4gIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc3R5bGVTaGVldCk7XG59ICJdLCJuYW1lcyI6WyJ1c2VFZmZlY3QiLCJ1c2VSZWYiLCJUSFJFRSIsIkNBTk5PTiIsImJhbGxNYXRlcmlhbCIsIk1hdGVyaWFsIiwiZnJpY3Rpb24iLCJyZXN0aXR1dGlvbiIsInBsYXRmb3JtTWF0ZXJpYWwiLCJCb3VuY2VTY2VuZSIsIm1vdW50UmVmIiwic2NlbmUiLCJjYW1lcmEiLCJyZW5kZXJlciIsIndvcmxkIiwiYmFsbHMiLCJ3YWxscyIsIndhbGxCb2RpZXMiLCJpc0RyYXdpbmciLCJ3YWxsU3RhcnQiLCJWZWN0b3IzIiwid2FsbEVuZCIsImN1cnJlbnRXYWxsTWVzaCIsImF1ZGlvQ29udGV4dCIsInNvdW5kRW5hYmxlZCIsImJhbGxQbGF0Zm9ybUNvbnRhY3RNYXRlcmlhbCIsImluaXRBdWRpbyIsIndpbmRvdyIsIkF1ZGlvQ29udGV4dCIsIndlYmtpdEF1ZGlvQ29udGV4dCIsInBsYXlCb3VuY2VTb3VuZCIsImludGVuc2l0eSIsIm9zY2lsbGF0b3IiLCJjcmVhdGVPc2NpbGxhdG9yIiwiZ2Fpbk5vZGUiLCJjcmVhdGVHYWluIiwidHlwZSIsImZyZXF1ZW5jeSIsInNldFZhbHVlQXRUaW1lIiwiY3VycmVudFRpbWUiLCJleHBvbmVudGlhbFJhbXBUb1ZhbHVlQXRUaW1lIiwiZ2FpbiIsImNvbm5lY3QiLCJkZXN0aW5hdGlvbiIsInN0YXJ0Iiwic3RvcCIsImluaXRTY2VuZSIsIlNjZW5lIiwiYmFja2dyb3VuZCIsIkNvbG9yIiwiUGVyc3BlY3RpdmVDYW1lcmEiLCJpbm5lcldpZHRoIiwiaW5uZXJIZWlnaHQiLCJwb3NpdGlvbiIsInoiLCJXZWJHTFJlbmRlcmVyIiwiYW50aWFsaWFzIiwic2V0U2l6ZSIsInNoYWRvd01hcCIsImVuYWJsZWQiLCJjdXJyZW50IiwiYXBwZW5kQ2hpbGQiLCJkb21FbGVtZW50IiwiYW1iaWVudExpZ2h0IiwiQW1iaWVudExpZ2h0IiwiYWRkIiwiZGlyZWN0aW9uYWxMaWdodCIsIkRpcmVjdGlvbmFsTGlnaHQiLCJzZXQiLCJjYXN0U2hhZG93Iiwic2hhZG93IiwibWFwU2l6ZSIsIndpZHRoIiwiaGVpZ2h0IiwiaW5pdFBoeXNpY3MiLCJXb3JsZCIsImdyYXZpdHkiLCJWZWMzIiwiQ29udGFjdE1hdGVyaWFsIiwiYWRkQ29udGFjdE1hdGVyaWFsIiwiZ3JvdW5kQm9keSIsIkJvZHkiLCJTVEFUSUMiLCJzaGFwZSIsIlBsYW5lIiwibWF0ZXJpYWwiLCJxdWF0ZXJuaW9uIiwic2V0RnJvbUF4aXNBbmdsZSIsIk1hdGgiLCJQSSIsInkiLCJhZGRCb2R5IiwiZ3JvdW5kR2VvbWV0cnkiLCJQbGFuZUdlb21ldHJ5IiwiZ3JvdW5kTWF0ZXJpYWwiLCJNZXNoU3RhbmRhcmRNYXRlcmlhbCIsImNvbG9yIiwicm91Z2huZXNzIiwibWV0YWxuZXNzIiwiZ3JvdW5kIiwiTWVzaCIsInJvdGF0aW9uIiwieCIsInJlY2VpdmVTaGFkb3ciLCJjcmVhdGVCYWxsIiwicmFkaXVzIiwiYmFsbEJvZHkiLCJtYXNzIiwiU3BoZXJlIiwibGluZWFyRGFtcGluZyIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsInJlbGF0aXZlVmVsb2NpdHkiLCJjb250YWN0IiwiZ2V0SW1wYWN0VmVsb2NpdHlBbG9uZ05vcm1hbCIsImFicyIsIm1pbiIsImJhbGxHZW9tZXRyeSIsIlNwaGVyZUdlb21ldHJ5IiwicmFuZG9tIiwiYmFsbE1lc2giLCJib2R5IiwibWVzaCIsImNyZWF0ZVdhbGwiLCJlbmQiLCJkaXJlY3Rpb24iLCJzdWJWZWN0b3JzIiwibGVuZ3RoIiwiY2VudGVyIiwiYWRkVmVjdG9ycyIsIm11bHRpcGx5U2NhbGFyIiwid2FsbERpcmVjdGlvbiIsImNsb25lIiwibm9ybWFsaXplIiwiYW5nbGUiLCJhdGFuMiIsIndhbGxTaGFwZSIsIkJveCIsIndhbGxCb2R5IiwicHVzaCIsIndhbGxHZW9tZXRyeSIsIkJveEdlb21ldHJ5Iiwid2FsbE1hdGVyaWFsIiwid2FsbE1lc2giLCJjb3B5IiwidXBkYXRlVGVtcFdhbGwiLCJyZW1vdmUiLCJ0cmFuc3BhcmVudCIsIm9wYWNpdHkiLCJyYXljYXN0ZXIiLCJSYXljYXN0ZXIiLCJtb3VzZSIsIlZlY3RvcjIiLCJkcmF3aW5nUGxhbmUiLCJvbk1vdXNlRG93biIsImNsaWVudFgiLCJjbGllbnRZIiwic2V0RnJvbUNhbWVyYSIsInNoaWZ0S2V5IiwiaW50ZXJzZWN0aW9uIiwicmF5IiwiaW50ZXJzZWN0UGxhbmUiLCJiYWxsIiwib25Nb3VzZU1vdmUiLCJvbk1vdXNlVXAiLCJkaXN0YW5jZVRvIiwib25XaW5kb3dSZXNpemUiLCJhc3BlY3QiLCJ1cGRhdGVQcm9qZWN0aW9uTWF0cml4Iiwib25Ub3VjaFN0YXJ0IiwicHJldmVudERlZmF1bHQiLCJ0b3VjaCIsInRvdWNoZXMiLCJ0b2dnbGVTb3VuZCIsInNvdW5kVG9nZ2xlIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInRleHRDb250ZW50Iiwic2V0QXR0cmlidXRlIiwidGltZVN0ZXAiLCJhbmltYXRlIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwic3RlcCIsImkiLCJyZW1vdmVCb2R5Iiwic3BsaWNlIiwicmVuZGVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwiZGlzcG9zZSIsInJlbW92ZUNoaWxkIiwiaGFuZGxlQm91bmNpbmVzc0NoYW5nZSIsIm5ld1Jlc3RpdHV0aW9uIiwicGFyc2VGbG9hdCIsInRhcmdldCIsInZhbHVlIiwiZGlzcGxheSIsInRvRml4ZWQiLCJkaXYiLCJjbGFzc05hbWUiLCJyZWYiLCJzdHlsZSIsImlkIiwiaDIiLCJwIiwibGFiZWwiLCJodG1sRm9yIiwiaW5wdXQiLCJuYW1lIiwibWF4IiwiZGVmYXVsdFZhbHVlIiwib25DaGFuZ2UiLCJhcmlhLWxhYmVsIiwic3BhbiIsImJ1dHRvbiIsInN0eWxlcyIsInN0eWxlU2hlZXQiLCJjcmVhdGVFbGVtZW50IiwiaW5uZXJUZXh0IiwiaGVhZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/BounceScene.js\n");

/***/ })

};
;